{"version":3,"sources":["images/mindful.png","config/theme.js","images/main.svg","images/imagegirl.jpg","images/hongkong.jpg","images/chinesepainting.jpg","images/ComputerScienceGirl.jpg","images/self.png","images/templeofheaven.jpg","components/Timeline/Timeline.styles.jsx","components/Timeline/Timeline.jsx","pages/WelcomePage/WelcomePage.styles.jsx","components/LoadSpinner/LoadingSpinner.styles.jsx","components/LoadSpinner/LoadSpinner.jsx","pages/WelcomePage/WelcomePage.jsx","pages/AboutPage/AboutPage.styles.jsx","pages/AboutPage/AboutPage.jsx","index.js","pages/GlobeTrottingPage/GlobeTrottingPage.jsx","pages/ReflectionsPage/ReflectionsPage.jsx","pages/TechWorldPage/TechWorldPage.jsx","pages/BookReviewsPage/BookReviewsPage.jsx","pages/ChineseCulturePage/ChineseCulturePage.jsx","pages/QuotesPage/QuotesPage.styles.jsx","api/connect-firebase.js","pages/FullArticlePage/FullArticlePage.styles.jsx","layouts/PortalLayout.styles.jsx","layouts/PortalLayout.jsx","components/DetailCard/DetailCard.styles.jsx","components/DetailCard/DetailCard.jsx","pages/DetailsPage/DetailsPage.styles.jsx","pages/DetailsPage/DetailsPage.jsx","components/ExploreButton/ExploreButton.styles.jsx","components/ExploreButton/ExploreButton.jsx","pages/ErrorPage/Error404.jsx","pages/ErrorPage/Error400.jsx","ErrorHandler.jsx","components/Article/Article.styles.jsx","components/Article/Article.jsx"],"names":["module","exports","colours","white","black","maroon","grey","lightGrey","breakpoint","widescreen","desktop","tablet","mobile","TimelineText","styled","span","TimelineDot","props","active","theme","TimelineVerticalLine","div","TimelineWrapper","ArrowUp","ArrowDown","Timeline","allPosts","onClick","useState","start","setStart","end","setEnd","displayPosts","slice","color","size","map","item","key","title","id","date","length","Container","ButtonWrapper","style","main","height","backgroundColor","display","paddingTop","Wrapper","LoadSpinner","type","WelcomePage","pathname","location","latestPost","useRef","history","useHistory","setActive","useErrorStatus","setErrorStatusCode","useEffect","a","FirebaseWrapper","ref","getAllPosts","then","posts","response","current","fetchLatestPosts","handleTimelineChange","activeItem","handleExploreButtonClick","query","text","topImage","push","state","post","PortalLayout","Grid","container","columns","Column","Article","ExploreButton","pointRight","Divider","hidden","AboutHeader","h1","AboutText","HighlightText","AboutPage","console","log","Row","Image","src","imagegirl","circular","GridRow","Button","e","preventDefault","window","href","Icon","name","require","config","path","__dirname","process","ReactDOM","render","component","Error404","document","getElementById","firebaseConfig","apiKey","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_API_ID","measurementId","FIREBASE_MEASUREMENT_ID","firebase","initializeApp","this","_ref","database","lastDocument","firstDocument","LIMIT","orderByChild","once","snapshot","total","forEach","val","concat","catch","error","limitToFirst","temp","startAt","startAfter","limitToLast","endBefore","PortalLayoutStyled","NavItem","Link","selected","NavTitle","putColour","children","className","to","SegmentStyle","borderColor","ClickMore","DetailCard","handleClick","Segment","alt","width","dangerouslySetInnerHTML","__html","Placeholder","Line","filterbarStyle","marginBottom","detailCardBorderStyle","paginationStyle","marginTop","textAlign","image","paddingLeft","paddingRight","paddingBottom","DetailsPage","pathName","data","handleNextButtonClick","handlePrevButtonClick","loading","centered","stackable","Array","result","Explore","ButtonText","Error400","ErrorStatusContext","createContext","ErrorHandler","errorStatusCode","listen","undefined","contextPayload","useMemo","Provider","value","useContext","ImageContainer","Header","as","horizontal"],"mappings":"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","file":"static/js/main.0028cd09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mindful.4f0626cd.png\";","export default {\r\n  colours: {\r\n    white: '#ffffff',\r\n    black: '#000000',\r\n    maroon: '#960F4A',\r\n    grey: '#C4C4C4',\r\n    lightGrey: '#f4f5f6'\r\n  },\r\n  breakpoint: {\r\n    widescreen: '1408px',\r\n    desktop: '1400px',\r\n    tablet: '1210px',\r\n    mobile: '1000px'\r\n  }\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/main.59fe56c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/imagegirl.b6c30208.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hongkong.9044d6dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chinesepainting.7ab22726.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ComputerScienceGirl.2f37a260.jpg\";","module.exports = __webpack_public_path__ + \"static/media/self.57b6b572.png\";","module.exports = __webpack_public_path__ + \"static/media/templeofheaven.0da538fe.jpg\";","import styled from 'styled-components';\r\nimport theme from '../../config/theme';\r\n\r\nexport const TimelineText = styled.span`\r\n  place-content: center;\r\n  width: calc(50vw + 50%);\r\n  margin-left: 40px;\r\n`;\r\n\r\n\r\nexport const TimelineDot = styled.span`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  margin-left: -11px;\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  z-index: 999;\r\n\r\n  background-color: ${(props) => (props.active ? theme.colours.maroon : theme.colours.grey)};\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n\r\nexport const TimelineVerticalLine = styled.div`\r\n  width: 3px;\r\n  margin-left: 90px;\r\n  background-color: ${theme.colours.grey};\r\n`;\r\n\r\nexport const TimelineWrapper = styled.div`\r\n  display: flex;\r\n  padding: 10px 0 20px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ArrowUp = styled.div`\r\n  position: absolute;\r\n  margin-left: 76px;\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n\r\nexport const ArrowDown = styled.div`\r\n  position: absolute;\r\n  margin-left: 76px;\r\n  margin-top: -30px;\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport {\r\n  TimelineWrapper,\r\n  TimelineVerticalLine,\r\n  TimelineDot,\r\n  TimelineText,\r\n  ArrowUp, ArrowDown\r\n} from './Timeline.styles';\r\nimport theme from '../../config/theme';\r\n\r\n// allPosts: {title, text, date, topImage}\r\nexport const Timeline = ({ allPosts, active, onClick } = {}) => {\r\n  // Note that we will not display all latest posts at once.\r\n  // At any point, there will only be 5 items showing in the timeline\r\n  // Start and End are the Indexes of the latest posts that we will show\r\n  const [start, setStart] = useState(0);\r\n  const [end, setEnd] = useState(5);\r\n\r\n  const displayPosts = allPosts.slice(start, end);\r\n\r\n  return (\r\n    <div>\r\n      {start > 0\r\n        ? (\r\n          <ArrowUp onClick={() => {\r\n            setStart(start - 1);\r\n            setEnd(end - 1);\r\n          }}\r\n          >\r\n            <FaAngleDoubleUp color={theme.colours.maroon} size={30} />\r\n          </ArrowUp>\r\n        )\r\n        : ''}\r\n      <TimelineVerticalLine>\r\n        {displayPosts.map((item) => (\r\n          <TimelineWrapper key={item.title} onClick={() => onClick(item)}>\r\n            <TimelineDot\r\n              onClick={() => onClick(item)}\r\n              id={item}\r\n              active={active && active.title === item.title}\r\n            >\r\n              <TimelineText>{item.date}</TimelineText>\r\n            </TimelineDot>\r\n          </TimelineWrapper>\r\n        ))}\r\n      </TimelineVerticalLine>\r\n      {end < allPosts.length\r\n        ? (\r\n          <ArrowDown onClick={() => {\r\n            setStart(start + 1);\r\n            setEnd(end + 1);\r\n          }}\r\n          >\r\n            <FaAngleDoubleDown color={theme.colours.maroon} size={30} />\r\n          </ArrowDown>\r\n        )\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst style = {\r\n  main: {\r\n    height: '100vh',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    paddingTop: '20px'\r\n  }\r\n};\r\n\r\nexport const Container = styled.div`\r\n  margin-top: 20px;\r\n`;\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  text-align: end;\r\n`;\r\n\r\nexport default style;\r\n","import styled from 'styled-components';\r\n\r\n// Center in screen\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transform: -webkit-translate(-50%, -50%);\r\n  transform: -moz-translate(-50%, -50%);\r\n  transform: -ms-translate(-50%, -50%);\r\n  z-index: 9999;\r\n`;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport theme from '../../config/theme';\r\nimport { Wrapper } from './LoadingSpinner.styles';\r\n\r\nconst LoadSpinner = () => (\r\n  <Wrapper>\r\n    <ReactLoading type=\"spin\" color={theme.colours.maroon} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default LoadSpinner;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {\r\n  Grid, Divider\r\n} from 'semantic-ui-react';\r\nimport { Article } from '../../components/Article/Article';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { Timeline } from '../../components/Timeline/Timeline';\r\nimport style, { Container, ButtonWrapper } from './WelcomePage.styles';\r\nimport { useErrorStatus } from '../../ErrorHandler';\r\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\r\nimport { ExploreButton } from '../../components/ExploreButton/ExploreButton';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\n\r\nconst WelcomePage = ({ location: { pathname } } = {}) => {\r\n  const latestPost = useRef([]);\r\n  const history = useHistory();\r\n  const [active, setActive] = useState();\r\n  const { setErrorStatusCode } = useErrorStatus();\r\n\r\n  useEffect(() => {\r\n    async function fetchLatestPosts() {\r\n      try {\r\n        var response = await FirebaseWrapper.ref('cs-posts').getAllPosts().then((posts) => {\r\n          if (posts) {\r\n            // contains {title, text, date, topImage}\r\n            return posts\r\n          }\r\n        });\r\n        latestPost.current = response\r\n        setActive(latestPost.current[0])\r\n      } catch (e) {\r\n        // Show error message\r\n        setErrorStatusCode(400);\r\n      }\r\n    }\r\n    fetchLatestPosts();\r\n  }, [setErrorStatusCode]);\r\n\r\n  const handleTimelineChange = (activeItem) => {\r\n    setActive(activeItem);\r\n  };\r\n\r\n  const handleExploreButtonClick = async () => {\r\n    const query = {\r\n      title: active.title,\r\n      text: active.text,\r\n      date: active.date,\r\n      topImage: active.topImage,\r\n    };\r\n\r\n    history.push({\r\n      pathname: '/full_article',\r\n      state: { post: query }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PortalLayout pathname={pathname}>\r\n      {latestPost.current.length > 0 ? (\r\n        <div style={style.main}>\r\n          <Container>\r\n            <Grid container columns={2}>\r\n              <Grid.Column>\r\n                <Timeline\r\n                  allPosts={latestPost.current}\r\n                  active={active}\r\n                  onClick={handleTimelineChange}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column >\r\n                <Article post={active} />\r\n                <ButtonWrapper>\r\n                  <ExploreButton handleExploreButtonClick={handleExploreButtonClick} text={\"Explore\"} pointRight={true} />\r\n                </ButtonWrapper>\r\n              </Grid.Column>\r\n              <Divider hidden />\r\n            </Grid>\r\n          </Container>\r\n        </div>\r\n      )\r\n        : (\r\n          <LoadSpinner />\r\n        )}\r\n    </PortalLayout>\r\n  );\r\n};\r\n\r\nexport default WelcomePage;\r\n","import styled from 'styled-components';\r\nimport theme from '../../config/theme';\r\n\r\nexport const AboutHeader = styled.h1`\r\n  width: 100%;\r\n  text-align: center;\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n\r\nexport const AboutText = styled.span`\r\n  white-space: pre-line;\r\n`;\r\n\r\nexport const HighlightText = styled.span`\r\n  color: ${theme.colours.maroon};\r\n  font-weight: bold;\r\n  width: 100%;\r\n`;\r\n","import React from 'react';\r\nimport { Grid, Button, Icon, GridRow, Image } from 'semantic-ui-react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { AboutHeader, AboutText, HighlightText } from './AboutPage.styles';\r\nimport imagegirl from '../../images/imagegirl.jpg';\r\n\r\nconst AboutPage = ({ location: { pathname } = {} } = {}) => {\r\n  console.log(\"ABOUT PAGE\")\r\n  console.log(pathname)\r\n  return (\r\n    <PortalLayout pathname={pathname}>\r\n      <Grid container columns={1}>\r\n        <Grid.Row>\r\n          <Image src={imagegirl} size='medium' circular />\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <AboutHeader>\r\n            My name is Hui Ying.\r\n          </AboutHeader>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <AboutText>\r\n            I am currently residing in <HighlightText>Singapore</HighlightText>. I majored in Computer Science at the National University of Singapore and graduated in May 2021. I will be working as a full time software engineer after graduation.\r\n          </AboutText>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <AboutText>\r\n            I don’t have the best language skills, but I do enjoy <HighlightText>reading, writing and documenting</HighlightText> things I have learned. Previously, most of my written works are on my medium account . However, I have decided to transition to using WordPress as I get to have my own domain and can customise how I want to present my articles. I plan to continue my writing journey here and hopefully churn out useful and interesting articles for readers all over the world!\r\n          </AboutText>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <AboutText>\r\n            I have many interests. Both the sciences and arts fascinate me and are an inextricable part of my life. The sciences are what makes things happen. Innovation and technology helps propel the world to the next stage of development. On the other hand, the arts (both humanities and literal art) help make life worth living. We can’t do without beautiful things or understanding of the world. Therefore, I hope to pursue my interests in both areas and be a well-rounded individual.\r\n          </AboutText>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <AboutText>\r\n            Thank you for reading! You can reach me at my email <HighlightText>huiyingooi1@gmail.com</HighlightText>\r\n          </AboutText>\r\n        </Grid.Row>\r\n        <GridRow>\r\n          <Button color='linkedin' onClick={(e) => {\r\n            e.preventDefault();\r\n            window.location.href = 'https://www.linkedin.com/in/hui-ying-ooi';\r\n          }}><Icon name='linkedin' />Connect on Linkedin</Button>\r\n        </GridRow>\r\n      </Grid>\r\n    </PortalLayout>\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\nimport WelcomePage from './pages/WelcomePage/WelcomePage';\r\nimport AboutPage from './pages/AboutPage/AboutPage';\r\nimport QuotesPage from './pages/QuotesPage/QuotesPage';\r\nimport GlobeTrottingPage from './pages/GlobeTrottingPage/GlobeTrottingPage';\r\nimport Error404 from './pages/ErrorPage/Error404';\r\nimport { ErrorHandler } from './ErrorHandler';\r\nimport ReflectionsPage from './pages/ReflectionsPage/ReflectionsPage';\r\nimport TechWorldPage from './pages/TechWorldPage/TechWorldPage';\r\nimport BookReviewsPage from './pages/BookReviewsPage/BookReviewsPage';\r\nimport ChineseCulturePage from './pages/ChineseCulturePage/ChineseCulturePage';\r\nimport FullArticlePage from './pages/FullArticlePage/FullArticlePage';\r\nrequire(\"dotenv\").config({ path: __dirname + \"/.env\" });\r\n\r\nconsole.log(\"Welcome Page\")\r\nconsole.log(process.env.PUBLIC_URL)\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <ErrorHandler>\r\n      <Switch>\r\n        <Route path=\"/\" component={WelcomePage} />\r\n        <Route path=\"/about\" component={AboutPage} />\r\n        {/* <Route exact path=\"/\" component={WelcomePage} />\r\n        <Route exact path=\"/about\" component={AboutPage} />\r\n        <Route exact path=\"/tech-world\" component={TechWorldPage} />\r\n        <Route exact path=\"/book-reviews\" component={BookReviewsPage} />\r\n        <Route exact path=\"/chinese-culture\" component={ChineseCulturePage} />\r\n        <Route exact path=\"/globe_trotting\" component={GlobeTrottingPage} />\r\n        <Route exact path=\"/quotes\" component={QuotesPage} />\r\n        <Route exact path=\"/reflections\" component={ReflectionsPage} />\r\n        <Route exact path=\"/full_article\" component={FullArticlePage} /> */}\r\n        <Route path=\"*\" component={Error404} />\r\n      </Switch>\r\n    </ErrorHandler>\r\n  </HashRouter>,\r\n  // <h1>TESTING ONE TWO</h1>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*\r\nQuotes\r\nGlobe Trotting\r\nReflections\r\nChinese Culture\r\nBook Reviews\r\nTech World\r\n*/","import React, { useEffect, useState } from 'react';\r\nimport DetailsPage from '../DetailsPage/DetailsPage';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport hongkong from '../../images/hongkong.jpg';\r\n\r\nconst pathName = '/globe-trotting-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst GlobeTrottingPage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DetailsPage pathName={pathName} data={data} handleNextButtonClick={handleNextButtonClick} handlePrevButtonClick={handlePrevButtonClick} loading={loading} image={hongkong} title={\"Globe Trotting\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GlobeTrottingPage;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport DetailsPage from '../DetailsPage/DetailsPage';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport chinesepainting from '../../images/chinesepainting.jpg';\r\n\r\nconst pathName = '/reflection-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst ReflectionsPage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DetailsPage pathName={pathName} data={data} handleNextButtonClick={handleNextButtonClick} handlePrevButtonClick={handlePrevButtonClick} loading={loading} image={chinesepainting} title={\"Reflections\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReflectionsPage;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport DetailsPage from '../DetailsPage/DetailsPage';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport compsci from '../../images/ComputerScienceGirl.jpg';\r\n\r\nconst pathName = '/cs-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst TechWorldPage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DetailsPage pathName={pathName} data={data} handleNextButtonClick={handleNextButtonClick} handlePrevButtonClick={handlePrevButtonClick} loading={loading} image={compsci} title={\"Tech World!\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TechWorldPage;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport DetailsPage from '../DetailsPage/DetailsPage';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport self from '../../images/self.png';\r\n\r\nconst pathName = '/book-reviews-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst BookReviewsPage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DetailsPage pathName={pathName} data={data} handleNextButtonClick={handleNextButtonClick} handlePrevButtonClick={handlePrevButtonClick} loading={loading} image={self} title={\"Book Reviews\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookReviewsPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DetailsPage from '../DetailsPage/DetailsPage';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport heaven from '../../images/templeofheaven.jpg';\r\n\r\nconst pathName = '/chinese-culture-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst ChineseCulturePage = () => {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <DetailsPage pathName={pathName} data={data} handleNextButtonClick={handleNextButtonClick} handlePrevButtonClick={handlePrevButtonClick} loading={loading} image={heaven} title={\"Chinese Culture\"} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChineseCulturePage;\r\n\r\n","import theme from '../../config/theme';\r\nimport styled from 'styled-components';\r\n\r\nconst style = {\r\n  main: {\r\n    backgroundColor: theme.colours.white,\r\n    display: 'flex',\r\n    paddingTop: '20px',\r\n    height: '100vh',\r\n  },\r\n\r\n  card: {\r\n    paddingLeft: '100px',\r\n    paddingRight: '100px',\r\n    paddingBottom: '50px'\r\n  },\r\n\r\n  image: {\r\n    paddingLeft: '100px',\r\n    paddingRight: '100px',\r\n    paddingBottom: '50px'\r\n  },\r\n\r\n  text: {\r\n    textAlign: 'center'\r\n  },\r\n};\r\n\r\n\r\nexport default style;\r\n\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: \"ooijournal.firebaseapp.com\",\r\n    databaseURL: \"https://ooijournal.firebaseio.com\",\r\n    projectId: \"ooijournal\",\r\n    storageBucket: \"ooijournal.appspot.com\",\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.FIREBASE_API_ID,\r\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n/**\r\n * Wrapper class to interface with firebase\r\n */\r\nclass FirebaseWrapper {\r\n\r\n    constructor(path) {\r\n        this._ref = firebase.database().ref(path);\r\n        this.lastDocument = null;\r\n        this.firstDocument = null;\r\n        this.LIMIT = 10;\r\n    }\r\n\r\n    static ref(path) {\r\n        return new FirebaseWrapper(path);\r\n    }\r\n\r\n    getAllPosts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    total = [post.val()].concat(total);\r\n                })\r\n                return total;\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    get10Posts() {\r\n        if (this.lastDocument === null && this.firstDocument === null) {\r\n            return this._ref\r\n                .orderByChild(\"date\") // date in ascending order\r\n                .limitToFirst(this.LIMIT)\r\n                .once(\"value\")\r\n                .then(snapshot => {\r\n                    let total = [];\r\n                    var temp = [];\r\n                    snapshot.forEach(post => {\r\n                        //add new element to the front of the array\r\n                        temp = temp.concat(post.val().title);\r\n                        total = total.concat(post.val());\r\n                    })\r\n                    if (temp.length > 0) {\r\n                        this.lastDocument = temp[temp.length - 1];\r\n                        this.firstDocument = temp[0];\r\n                    }\r\n                    return total;\r\n                }).catch(console.error);\r\n        } else {\r\n            return this._ref\r\n                .orderByChild(\"date\") // date in ascending order\r\n                .limitToFirst(this.LIMIT)\r\n                .startAt(this.firstDocument) // inclusive\r\n                .once(\"value\")\r\n                .then(snapshot => {\r\n                    let total = [];\r\n                    var temp = [];\r\n                    snapshot.forEach(post => {\r\n                        //add new element to the front of the array\r\n                        temp = temp.concat(post.val().title);\r\n                        total = total.concat(post.val());\r\n                    })\r\n                    if (temp.length > 0) {\r\n                        this.lastDocument = temp[temp.length - 1];\r\n                        this.firstDocument = temp[0];\r\n                    }\r\n                    return total;\r\n                }).catch(console.error);\r\n        }\r\n    }\r\n\r\n    getNext10Posts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .limitToFirst(this.LIMIT)\r\n            .startAfter(this.lastDocument) // exclusive\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                var temp = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    temp = temp.concat(post.val().title);\r\n                    total = total.concat(post.val());\r\n                })\r\n                if (temp.length > 0) {\r\n                    this.lastDocument = temp[temp.length - 1];\r\n                    this.firstDocument = temp[0];\r\n                }\r\n                return total;\r\n            }).catch(console.error);\r\n    }\r\n\r\n    getPrev10Posts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .limitToLast(this.LIMIT)\r\n            .endBefore(this.firstDocument) // exclusive\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                var temp = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    temp = temp.concat(post.val().title);\r\n                    total = total.concat(post.val());\r\n                })\r\n                if (temp.length > 0) {\r\n                    this.lastDocument = temp[temp.length - 1];\r\n                    this.firstDocument = temp[0];\r\n                }\r\n                return total;\r\n            }).catch(console.error);\r\n    }\r\n}\r\n\r\nexport default FirebaseWrapper;\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Container = styled.div`\r\n  padding-left: 100px;\r\n  padding-right: 100px;\r\n`;","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport theme from '../config/theme';\r\n\r\nexport const PortalLayoutStyled = styled('div')`\r\n  display: flex;\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .layout--main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: stretch;\r\n    width: 100%;\r\n\r\n    .layout--navbar {\r\n      padding-top: 50px;\r\n      padding-bottom: 50px;\r\n      display: flex;\r\n      flex-direction: row;\r\n      width: 100%;\r\n      height: 10%;\r\n      align-items: center;\r\n      position: fixed;\r\n      z-index: 9999;\r\n      background-color: ${theme.colours.white};\r\n\r\n      .navbar--item {\r\n        display: inline-flex;\r\n        justify-content: space-between;\r\n        //edit here to adjust the nav-item\r\n        @media only screen and (max-width: ${theme.breakpoint.widescreen}) {\r\n          padding-left: 700px;\r\n        }\r\n        @media only screen and (max-width: ${theme.breakpoint.desktop}) {\r\n          padding-left: 450px;\r\n        }\r\n        @media only screen and (max-width: ${theme.breakpoint.tablet}) {\r\n          padding-left: 350x;\r\n        }\r\n        @media only screen and (max-width: ${theme.breakpoint.mobile}) {\r\n          padding-left: 10px;\r\n        }\r\n      }\r\n\r\n      .navbar--title {\r\n        display: inline-flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        height: 30px;\r\n        padding-left: 80px;\r\n      }\r\n    }\r\n\r\n    .layout--children {\r\n      flex: 1 1 auto;\r\n      margin-top: 150px;\r\n      background-color: ${theme.colours.white};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavItem = styled(Link)`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: ${theme.colours.maroon};\r\n  text-decoration: ${({ selected }) => (selected ? 'underline' : 'none')};\r\n  padding: 0px 0px 0px 40px;\r\n\r\n  :hover {\r\n    color: ${theme.colours.maroon};\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const NavTitle = styled.h1`\r\n  font-size: 40px;\r\n  color: ${({ putColour } = {}) =>\r\n    putColour ? theme.colours.maroon : theme.colours.black};\r\n`;\r\n","import React, { useEffect } from 'react';\r\nimport ReactGA from 'react-ga';\r\nimport { createBrowserHistory } from 'history';\r\nimport { FaHome } from 'react-icons/fa';\r\n\r\nimport { PortalLayoutStyled, NavTitle, NavItem } from './PortalLayout.styles';\r\n\r\nconst PortalLayout = ({ children, pathname }) => {\r\n  return (\r\n    <PortalLayoutStyled>\r\n      <div className=\"layout--main\">\r\n        <div className=\"layout--navbar\">\r\n          <div className=\"navbar--title\">\r\n            <NavTitle putColour>Hui Ying</NavTitle>\r\n          </div>\r\n          <div className=\"navbar--item\">\r\n            <NavItem selected={pathname === '/'} to=\"/\">\r\n              <FaHome />\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/about'} to=\"/about\">\r\n              About Me\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/tech-world'} to=\"/tech-world\">\r\n              Tech World\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/book-reviews'} to=\"/book-reviews\">\r\n              Book Reviews\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/chinese-culture'} to=\"/chinese-culture\">\r\n              Chinese Culture\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/globe_trotting'} to=\"/globe_trotting\">\r\n              Globe Trotting\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/quotes'} to=\"/quotes\">\r\n              Quotes\r\n            </NavItem>\r\n            <NavItem selected={pathname === '/reflections'} to=\"/reflections\">\r\n              Reflections\r\n            </NavItem>\r\n          </div>\r\n        </div>\r\n        <div className=\"layout--children\">{children}</div>\r\n      </div>\r\n    </PortalLayoutStyled>\r\n  );\r\n};\r\nexport default PortalLayout;\r\n","import theme from '../../config/theme';\r\nimport styled from 'styled-components';\r\n\r\nexport const SegmentStyle = {\r\n  borderColor: theme.colours.maroon\r\n};\r\n\r\nexport const ClickMore = styled.span`\r\n\r\n  background-color: ${theme.colours.white};\r\n\r\n  :hover {\r\n    background-color: ${theme.colours.maroon};\r\n    cursor: pointer;\r\n  }\r\n`;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Segment, Placeholder } from 'semantic-ui-react';\r\nimport { SegmentStyle, ClickMore } from './DetailCard.styles';\r\n\r\nexport const DetailCard = ({\r\n  title, text, date, topImage\r\n} = {}) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = async () => {\r\n    const query = {\r\n      title: title,\r\n      text: text,\r\n      date: date,\r\n      topImage: topImage,\r\n    };\r\n\r\n    history.push({\r\n      pathname: '/full_article',\r\n      state: { post: query }\r\n    });\r\n  }\r\n\r\n  return (title ? (\r\n    <Segment style={SegmentStyle}>\r\n      <div className=\"ui items\">\r\n        <div className=\"item\">\r\n          {topImage != null ? (\r\n            <div className=\"image\">\r\n              <img\r\n                src={topImage}\r\n                alt=\"Image\"\r\n                width=\"200\"\r\n                height=\"121\"\r\n              />\r\n            </div>\r\n          ) : (<div />)}\r\n          <div className=\"content\">\r\n            <div className=\"header\">{title}</div>\r\n            <div className=\"meta\">{date}</div>\r\n            <div className=\"description\" dangerouslySetInnerHTML={{ __html: text.length > 1000 ? text.slice(0, 1000) : text || \"\" }}></div>\r\n            <ClickMore className=\"meta\" onClick={handleClick} >{\"................. View More ..................\"}</ClickMore>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Segment>\r\n\r\n  ) : (\r\n    <Segment style={SegmentStyle}>\r\n      <div className=\"ui items\">\r\n        <div className=\"item\">\r\n          <div className=\"image\">\r\n            <Placeholder>\r\n              <Placeholder.Image />\r\n            </Placeholder>\r\n          </div>\r\n          <div className=\"content\">\r\n            <Placeholder>\r\n              <Placeholder.Line length=\"full\" />\r\n              <Placeholder.Line length=\"very long\" />\r\n              <Placeholder.Line length=\"long\" />\r\n              <Placeholder.Line length=\"medium\" />\r\n            </Placeholder>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Segment>\r\n  ));\r\n};\r\n","import theme from '../../config/theme';\r\nimport styled from 'styled-components';\r\n\r\nconst style = {\r\n  filterbarStyle: {\r\n    marginBottom: '20px'\r\n  },\r\n\r\n  detailCardBorderStyle: {\r\n    borderColor: theme.colours.maroon\r\n  },\r\n\r\n  paginationStyle: {\r\n    marginTop: '20px'\r\n  },\r\n\r\n  text: {\r\n    textAlign: 'center'\r\n  },\r\n\r\n  image: {\r\n    paddingLeft: '100px',\r\n    paddingRight: '100px',\r\n    paddingBottom: '50px',\r\n  },\r\n};\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  text-align: end;\r\n`;\r\n\r\nexport default style;\r\n","import React from 'react';\r\nimport { useLocation } from 'react-router-dom'\r\nimport { Grid } from 'semantic-ui-react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { DetailCard } from '../../components/DetailCard/DetailCard';\r\nimport style, { ButtonWrapper } from './DetailsPage.styles';\r\nimport { ExploreButton } from '../../components/ExploreButton/ExploreButton';\r\n\r\nconst DetailsPage = ({ pathName, data, handleNextButtonClick, handlePrevButtonClick, loading, image, title }) => {\r\n\r\n  return (\r\n    <PortalLayout pathname={pathName}>\r\n      <h1 style={style.text}>{title}</h1>\r\n      <img style={style.image} className=\"ui centered massive image\" src={image}></img>\r\n      <div>\r\n        {loading ? (\r\n          <div>\r\n            <div className=\"row\">\r\n              <Grid centered stackable columns={1}>\r\n                <Grid.Column width={10}>\r\n                  {[...Array(10)].map(() => (\r\n                    <DetailCard />\r\n                  ))}\r\n                </Grid.Column>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        ) : !loading && data.length > 0 ? (\r\n          <div>\r\n            <div className=\"row\">\r\n              <Grid centered stackable columns={1}>\r\n                <Grid.Column width={10}>\r\n                  {data.map((result) => (\r\n                    <DetailCard title={result.title} text={result.text} date={result.date} topImage={result.topImage} />\r\n                  ))}\r\n                </Grid.Column>\r\n              </Grid>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n              <h1 style={style.text}>{\"No Post Yet!\"}</h1>\r\n            )}\r\n        {data.length > 0 ? (\r\n          <Grid centered stackable columns={2}>\r\n            <Grid.Row >\r\n              <ButtonWrapper>\r\n                <ExploreButton handleExploreButtonClick={handlePrevButtonClick} text={\"\"} pointRight={false} />\r\n              </ButtonWrapper>\r\n              <ButtonWrapper>\r\n                <ExploreButton handleExploreButtonClick={handleNextButtonClick} text={\"\"} pointRight={true} />\r\n              </ButtonWrapper>\r\n            </Grid.Row>\r\n          </Grid>\r\n        ) : (<div />)}\r\n      </div>\r\n    </PortalLayout>\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","import styled from 'styled-components';\r\nimport theme from '../../config/theme';\r\n\r\nexport const Explore = styled.span`\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  color: ${theme.colours.maroon};\r\n  :hover {\r\n    color: ${theme.colours.maroon};\r\n    opacity: 0.8;\r\n  }\r\n`;\r\nexport const ButtonText = styled.span`\r\n  font-size: 1rem;\r\n  margin-right: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { FiArrowRightCircle, FiArrowLeftCircle } from 'react-icons/fi';\r\nimport { Explore, ButtonText } from './ExploreButton.styles';\r\n\r\nexport const ExploreButton = ({ handleExploreButtonClick, text, pointRight } = {}) => (\r\n  <div>\r\n    <Explore\r\n      onClick={handleExploreButtonClick}\r\n    >\r\n      <ButtonText>{text}</ButtonText>\r\n      {pointRight ? <FiArrowRightCircle /> : <FiArrowLeftCircle />}\r\n    </Explore>\r\n  </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport main from '../../images/main.svg';\r\n\r\nconst Error404 = () => (\r\n  <img className=\"ui  centered massive image\" src={main} alt=\"Page Not Found\" />\r\n);\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\n\r\nconst Error400 = () => (\r\n  <PortalLayout>\r\n    <h1>Error retrieving information</h1>\r\n  </PortalLayout>\r\n);\r\n\r\nexport default Error400;\r\n","import React, {\r\n  useContext, useEffect, useState, useMemo, createContext\r\n} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Error404 from './pages/ErrorPage/Error404';\r\nimport Error400 from './pages/ErrorPage/Error400';\r\n\r\n// A context will be the way that we allow components lower down\r\n// the tree to trigger the display of an error page\r\nconst ErrorStatusContext = createContext();\r\n\r\n// The top level component that will wrap our app's core features\r\nexport const ErrorHandler = ({ children }) => {\r\n  const history = useHistory();\r\n  const [errorStatusCode, setErrorStatusCode] = useState();\r\n\r\n  // Make sure to \"remove\" this status code whenever the user\r\n  // navigates to a new URL. If we didn't do that, then the user\r\n  // would be \"trapped\" into error pages forever\r\n  useEffect(() => {\r\n    // Listen for changes to the current location.\r\n    const unlisten = history.listen(() => setErrorStatusCode(undefined));\r\n    // cleanup the listener on unmount\r\n    return unlisten;\r\n  }, [history]);\r\n\r\n  // This is what the component will render. If it has an\r\n  // errorStatusCode that matches an API error, it will only render\r\n  // an error page. If there is no error status, then it will render\r\n  // the children as normal\r\n  const renderContent = () => {\r\n    if (errorStatusCode === 404) {\r\n      return <Error404 />;\r\n    }\r\n    if (errorStatusCode === 400) {\r\n      // Handle failed API calls\r\n      return <Error400 />;\r\n    }\r\n\r\n    // ... more HTTP codes handled here\r\n\r\n    return children;\r\n  };\r\n\r\n  // We wrap it in a useMemo for performance reasons. More here:\r\n  // https://kentcdodds.com/blog/how-to-optimize-your-context-value/\r\n  const contextPayload = useMemo(\r\n    () => ({ setErrorStatusCode }),\r\n    [setErrorStatusCode]\r\n  );\r\n\r\n  // We expose the context's value down to our components, while\r\n  // also making sure to render the proper content to the screen\r\n  return (\r\n    <ErrorStatusContext.Provider value={contextPayload}>\r\n      {renderContent()}\r\n    </ErrorStatusContext.Provider>\r\n  );\r\n};\r\n\r\n// A custom hook to quickly read the context's value. It's\r\n// only here to allow quick imports\r\nexport const useErrorStatus = () => useContext(ErrorStatusContext);\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  text-align: left;\r\n  margin: auto;\r\n  padding-bottom: 100px;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: block;\r\n  margin: auto;\r\n`;","import React from 'react';\r\nimport {\r\n  Header, Divider\r\n} from 'semantic-ui-react';\r\n\r\nimport { Container, ImageContainer } from './Article.styles'\r\n\r\n// post: {title, text, date, topImage}\r\nexport const Article = ({ post } = {}) => {\r\n  return (\r\n    <Container>\r\n      <Header as='h2'>{post.title || \"\"}</Header>\r\n      { post.topImage ? (\r\n        <ImageContainer>\r\n          <img\r\n            src={post.topImage}\r\n            alt=\"Image\"\r\n            className=\"ui centered massive image\"\r\n          />\r\n        </ImageContainer>\r\n      ) : (<div></div>)}\r\n      <Divider horizontal>{post.date || \"\"}</Divider>\r\n      <div dangerouslySetInnerHTML={{ __html: post.text || \"\" }}></div>\r\n    </Container>\r\n  );\r\n};\r\n"],"sourceRoot":""}