{"version":3,"sources":["images/main.svg","images/autumn.jpg","images/imagegirl.jpg","images/pinkmountain.jpg","images/flowers.jpg","images/hill.jpg","images/trailer.jpg","images/bluemountains.jpg","images/reflect.jpg","components/Article/Article.styles.jsx","components/Article/Article.jsx","components/Timeline/Timeline.styles.jsx","components/Timeline/Timeline.jsx","pages/LatestPage/LatestPage.styles.jsx","pages/LatestPage/LatestPage.jsx","components/QuoteCard/QuoteCard.jsx","components/EmptyQuoteCard/EmptyQuoteCard.jsx","pages/QuotesPage/QuotesPage.styles.jsx","pages/QuotesPage/QuotesPage.jsx","config/theme.js","pages/AboutPage/AboutPage.styles.jsx","pages/AboutPage/AboutPage.jsx","pages/FullArticlePage/FullArticlePage.styles.jsx","pages/FullArticlePage/FullArticlePage.jsx","index.js","layouts/PortalLayout.styles.jsx","layouts/PortalLayout.jsx","api/connect-firebase.js","components/NoPostHeader/NoPostHeader.jsx","components/DetailCard/DetailCard.styles.jsx","components/DetailCard/DetailCard.jsx","components/EmptyDetailCard/EmptyDetailCard.styles.jsx","components/EmptyDetailCard/EmptyDetailCard.jsx","pages/DetailsPage/DetailsPage.styles.jsx","components/ExploreButton/ExploreButton.styles.jsx","components/ExploreButton/ExploreButton.jsx","pages/DetailsPage/DetailsPage.jsx","images/bluesea.jpg","pages/ErrorPage/Error404.jsx","pages/ErrorPage/Error400.jsx","ErrorHandler.jsx","components/LoadSpinner/LoadingSpinner.styles.jsx","components/LoadSpinner/LoadSpinner.jsx"],"names":["module","exports","SimpleContainer","styled","div","ImageContainer","Article","post","Header","as","title","className","tag","src","topImage","bluesea","alt","Divider","horizontal","date","ReactHtmlParser","text","TimelineText","span","TimelineDot","props","active","theme","colours","maroon","grey","TimelineVerticalLine","TimelineWrapper","ArrowUp","ArrowDown","Timeline","allPosts","onClick","useState","start","setStart","end","setEnd","displayPosts","slice","color","size","map","item","key","id","length","style","main","height","backgroundColor","display","paddingTop","LatestPage","pathname","latestPost","useRef","setActive","loading","setLoading","setErrorStatusCode","useErrorStatus","useEffect","a","FirebaseWrapper","ref","getAllPosts","then","posts","response","current","fetchLatestPosts","PortalLayout","Grid","Column","width","activeItem","LoadSpinner","NoPostHeader","QuoteCard","Card","raised","Content","Meta","Description","EmptyQuoteCard","Placeholder","Line","h1","PostsCard","Background","image","card","paddingLeft","paddingRight","paddingBottom","textAlign","db","Quotes","data","setData","colorArray","fetchQuotesPosts","quoteImage","Group","centered","Array","result","index","white","black","lightGrey","breakpoint","widescreen","desktop","tablet","mobile","autumn","AboutCard","AboutPage","Image","imagegirl","circular","Button","e","preventDefault","window","location","href","Icon","name","Container","FullArticlePage","useLocation","undefined","state","query_str","substring","split","getSinglePost","fetchPost","require","config","path","__dirname","cs_db","bk_db","chi_db","gb_db","rf_db","ReactDOM","render","exact","compsci_img","book_reviews_img","chinese_img","globe_img","reflect_img","component","Error404","document","getElementById","PortalLayoutStyled","NavItem","Link","NavTitle","children","to","firebaseConfig","apiKey","process","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_API_ID","measurementId","FIREBASE_MEASUREMENT_ID","firebase","initializeApp","this","_ref","database","lastDocument","firstDocument","LIMIT","orderByChild","once","val","catch","console","error","snapshot","total","forEach","newPost","concat","limitToLast","temp","limitToFirst","startAfter","endBefore","SegmentStyle","overflow","ClickMore","DetailCard","history","useHistory","handleClick","query","push","Segment","EmptyDetailCard","ButtonWrapper","Explore","ButtonText","ExploreButton","handleExploreButtonClick","pointRight","DetailsPage","get10Posts","fetchNextPosts","getNext10Posts","fetchPrevPosts","getPrev10Posts","handlePrevButtonClick","handleNextButtonClick","fetchPosts","stackable","columns","Row","Error400","ErrorStatusContext","createContext","ErrorHandler","errorStatusCode","listen","contextPayload","useMemo","Provider","value","useContext","Wrapper","type"],"mappings":"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","file":"static/js/main.7c1c6b67.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.59fe56c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/autumn.7fd69f42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/imagegirl.b6c30208.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pinkmountain.4fc7b0e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flowers.780030e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hill.58d9926a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trailer.decf04ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bluemountains.792b1428.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reflect.05a08e81.jpg\";","import styled from 'styled-components';\r\n\r\nexport const SimpleContainer = styled.div`\r\n  text-align: left;\r\n  margin: auto;\r\n  padding-bottom: 100px;\r\n`;\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n\r\n","import React from 'react';\r\nimport { Divider, Header } from 'semantic-ui-react';\r\nimport bluesea from '../../images/bluesea.jpg';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { ImageContainer, SimpleContainer } from './Article.styles'\r\n\r\n// post: {title, text, date, topImage, tag}\r\n// Accessed from the Latest Page\r\nexport const Article = ({ post } = {}) => {\r\n  return (\r\n    <SimpleContainer>\r\n      <Header as='h2'>{post.title || \"\"}</Header>\r\n      <a className=\"ui red tag label\">{post.tag}</a>\r\n      <br />\r\n      <br />\r\n      <ImageContainer>\r\n        <img\r\n          src={post.topImage || bluesea}\r\n          alt=\"Image\"\r\n          className=\"ui centered massive image\"\r\n        />\r\n      </ImageContainer>\r\n      <Divider horizontal>{post.date || \"\"}</Divider>\r\n      <div>{ReactHtmlParser(post.text || \"\")}</div>\r\n    </SimpleContainer>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport theme from '../../config/theme';\r\n\r\nexport const TimelineText = styled.span`\r\n  place-content: center;\r\n  width: calc(50vw + 50%);\r\n  margin-left: 40px;\r\n`;\r\n\r\nexport const TimelineDot = styled.span`\r\n  display: inline-flex;\r\n  justify-content: space-between;\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n  margin-left: -11px;\r\n  height: 25px;\r\n  width: 25px;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  z-index: 999;\r\n\r\n  background-color: ${(props) => (props.active ? theme.colours.maroon : theme.colours.grey)};\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n\r\nexport const TimelineVerticalLine = styled.div`\r\n  width: 3px;\r\n  margin-left: 90px;\r\n  background-color: ${theme.colours.grey};\r\n`;\r\n\r\nexport const TimelineWrapper = styled.div`\r\n  display: flex;\r\n  padding: 10px 0 20px;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport const ArrowUp = styled.div`\r\n  position: absolute;\r\n  margin-left: 76px;\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n\r\nexport const ArrowDown = styled.div`\r\n  position: absolute;\r\n  margin-left: 76px;\r\n  margin-top: -30px;\r\n\r\n  :hover {\r\n    color: black;\r\n    cursor: pointer;\r\n    transform: scale(1.25);\r\n    transition: transform 0.4s;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\r\nimport {\r\n  TimelineWrapper,\r\n  TimelineVerticalLine,\r\n  TimelineDot,\r\n  TimelineText,\r\n  ArrowUp, ArrowDown\r\n} from './Timeline.styles';\r\nimport theme from '../../config/theme';\r\n\r\n// allPosts: {title, text, date, topImage}\r\nexport const Timeline = ({ allPosts, active, onClick } = {}) => {\r\n  // Note that we will not display all latest posts at once.\r\n  // At any point, there will only be 5 items showing in the timeline\r\n  // Start and End are the Indexes of the latest posts that we will show\r\n  const [start, setStart] = useState(0);\r\n  const [end, setEnd] = useState(5);\r\n\r\n  const displayPosts = allPosts.slice(start, end);\r\n\r\n  return (\r\n    <div>\r\n      {start > 0\r\n        ? (\r\n          <ArrowUp onClick={() => {\r\n            setStart(start - 1);\r\n            setEnd(end - 1);\r\n          }}\r\n          >\r\n            <FaAngleDoubleUp color={theme.colours.maroon} size={30} />\r\n          </ArrowUp>\r\n        )\r\n        : ''}\r\n      <TimelineVerticalLine>\r\n        {displayPosts.map((item) => (\r\n          <TimelineWrapper key={item.title} onClick={() => onClick(item)}>\r\n            <TimelineDot\r\n              onClick={() => onClick(item)}\r\n              id={item}\r\n              active={active && active.title === item.title}\r\n            >\r\n              <TimelineText>{item.date}</TimelineText>\r\n            </TimelineDot>\r\n          </TimelineWrapper>\r\n        ))}\r\n      </TimelineVerticalLine>\r\n      {end < allPosts.length\r\n        ? (\r\n          <ArrowDown onClick={() => {\r\n            setStart(start + 1);\r\n            setEnd(end + 1);\r\n          }}\r\n          >\r\n            <FaAngleDoubleDown color={theme.colours.maroon} size={30} />\r\n          </ArrowDown>\r\n        )\r\n        : ''}\r\n    </div>\r\n  );\r\n};\r\n","const style = {\r\n  main: {\r\n    height: '100vh',\r\n    backgroundColor: 'white',\r\n    display: 'flex',\r\n    paddingTop: '20px',\r\n  }\r\n};\r\n\r\nexport default style;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Grid\r\n} from 'semantic-ui-react';\r\nimport { Article } from '../../components/Article/Article';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { Timeline } from '../../components/Timeline/Timeline';\r\nimport style from './LatestPage.styles';\r\nimport { useErrorStatus } from '../../ErrorHandler';\r\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\r\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\n\r\nconst LatestPage = ({ pathname }) => {\r\n\r\n  const latestPost = useRef([]);\r\n  const [active, setActive] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const { setErrorStatusCode } = useErrorStatus();\r\n\r\n  useEffect(() => {\r\n    async function fetchLatestPosts() {\r\n      try {\r\n        setLoading(true);\r\n        var response = await FirebaseWrapper.ref(pathname).getAllPosts().then((posts) => {\r\n          if (posts) {\r\n            // contains {title, text, date, topImage (optional), tag, id}\r\n            return posts\r\n          }\r\n        });\r\n        latestPost.current = response\r\n        setActive(latestPost.current[0])\r\n        setLoading(false)\r\n      } catch (e) {\r\n        // Show error message\r\n        setErrorStatusCode(400);\r\n      }\r\n    }\r\n    fetchLatestPosts();\r\n  }, [setErrorStatusCode]);\r\n\r\n  const handleTimelineChange = (activeItem) => {\r\n    setActive(activeItem);\r\n  };\r\n\r\n  return (\r\n    <PortalLayout>\r\n      {!loading && latestPost.current.length > 0 ? (\r\n        <div style={style.main}>\r\n          <Grid>\r\n            <Grid.Column width={4}>\r\n              <Timeline\r\n                allPosts={latestPost.current}\r\n                active={active}\r\n                onClick={handleTimelineChange}\r\n              />\r\n            </Grid.Column>\r\n            <Grid.Column width={11}>\r\n              <Article post={active} />\r\n            </Grid.Column>\r\n          </Grid>\r\n        </div>\r\n      )\r\n        : loading ? (\r\n          <LoadSpinner />\r\n        ) : <NoPostHeader />}\r\n    </PortalLayout>\r\n  );\r\n};\r\n\r\nexport default LatestPage;\r\n","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport const QuoteCard = ({\r\n  post, color\r\n} = {}) => {\r\n  return (\r\n    <Card raised={true} color={color} >\r\n      <Card.Content>\r\n        <Card.Header>{post.title}</Card.Header>\r\n        <Card.Meta>{post.date}</Card.Meta>\r\n        <Card.Description>\r\n          <div>{ReactHtmlParser(post.text || \"\")}</div>\r\n        </Card.Description>\r\n      </Card.Content>\r\n    </Card>\r\n\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Placeholder, Card } from 'semantic-ui-react';\r\n\r\nexport const EmptyQuoteCard = () => {\r\n  return (\r\n    <Card raised={true}>\r\n      <Card.Content>\r\n        <Placeholder>\r\n          <Placeholder.Line length=\"full\" />\r\n          <Placeholder.Line length=\"very long\" />\r\n          <Placeholder.Line length=\"long\" />\r\n          <Placeholder.Line length=\"medium\" />\r\n        </Placeholder>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst style = {\r\n  card: {\r\n    paddingLeft: '100px',\r\n    paddingRight: '100px',\r\n    paddingBottom: '50px'\r\n  },\r\n\r\n  image: {\r\n    paddingLeft: '100px',\r\n    paddingRight: '100px',\r\n    paddingBottom: '50px'\r\n  },\r\n\r\n  text: {\r\n    textAlign: 'center'\r\n  },\r\n};\r\n\r\nexport const Header = styled.h1`\r\n  text-align: center;\r\n  background-color: rgba(255,255,255,0.5);\r\n`\r\n\r\nexport const PostsCard = styled.div`\r\n  width: calc(100% - 200px);\r\n  margin: 100px;\r\n  text-align: left;\r\n  padding: 80px;\r\n`\r\n\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-image: ${(props) => 'url(' + props.image + ')'};\r\n  background-size: cover;\r\n  background-attachment:fixed;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  align-items: center;\r\n`\r\n\r\nexport default style;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { QuoteCard } from '../../components/QuoteCard/QuoteCard';\r\nimport { EmptyQuoteCard } from '../../components/EmptyQuoteCard/EmptyQuoteCard';\r\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\r\nimport style, { Background, PostsCard, Header } from './QuotesPage.styles.jsx';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\nimport quoteImage from '../../images/pinkmountain.jpg';\r\n\r\nconst pathName = '/quotes-posts'\r\nconst db = FirebaseWrapper.ref(pathName)\r\n\r\nconst Quotes = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const colorArray = [\"red\", \"orange\", \"yellow\", \"olive\", \"green\", \"teal\", \"blue\", \"violet\", \"purple\", \"pink\", \"brown\", \"grey\", \"black\"]\r\n\r\n  useEffect(() => {\r\n    async function fetchQuotesPosts() {\r\n      setLoading(true);\r\n      var response = await db.getAllPosts().then((posts) => {\r\n        if (posts) {\r\n          // contains {title, text, date, topImage}\r\n          return posts\r\n        }\r\n      });\r\n      setData(response);\r\n      setLoading(false);\r\n    }\r\n    fetchQuotesPosts();\r\n  }, []);\r\n\r\n  return (\r\n    <PortalLayout >\r\n      <div className=\"image\">\r\n        <Background image={quoteImage}>\r\n          <PostsCard>\r\n            {loading && data.length === 0 ? (\r\n              <div>\r\n                <div className=\"row\" style={style.card}>\r\n                  <Card.Group centered >\r\n                    {[...Array(4)].map(() => (\r\n                      <EmptyQuoteCard />\r\n                    ))}\r\n                  </Card.Group>\r\n                </div>\r\n              </div>\r\n            ) : (!loading && data.length === 0) ? (\r\n              <div>\r\n                <Header>My Favourite Quotes</Header>\r\n                <NoPostHeader style={style.text} />\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <Header>My Favourite Quotes</Header>\r\n                <div className=\"row\" style={style.card}>\r\n                  <Card.Group centered >\r\n                    {data.map((result, index) => (\r\n                      <QuoteCard post={result} color={colorArray[index % (colorArray.length)]} />\r\n                    ))}\r\n                  </Card.Group>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </PostsCard>\r\n        </Background>\r\n      </div>\r\n    </PortalLayout>\r\n  );\r\n};\r\n\r\nexport default Quotes;\r\n","export default {\r\n  colours: {\r\n    white: '#ffffff',\r\n    black: '#000000',\r\n    maroon: '#960F4A',\r\n    grey: '#C4C4C4',\r\n    lightGrey: '#f4f5f6'\r\n  },\r\n  breakpoint: {\r\n    widescreen: '1408px',\r\n    desktop: '1400px',\r\n    tablet: '1210px',\r\n    mobile: '1000px'\r\n  }\r\n};\r\n","import autumn from '../../images/autumn.jpg';\r\nimport styled from \"styled-components\";\r\nimport theme from '../../config/theme';\r\n\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-image: url('${autumn}');;\r\n  background-size: cover;\r\n  background-attachment:fixed;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  align-items: center;\r\n`\r\n\r\nexport const AboutCard = styled.div`\r\n  background-color: rgba(255,255,255,0.5);\r\n  font-size: 20px;\r\n  font-family: cursive;\r\n  width: calc(100% - 200px);\r\n  margin: 100px;\r\n  color: ${theme.colours.black};\r\n  text-align: left;\r\n  padding: 80px;\r\n  min-width: 750px;\r\n`","import React from \"react\";\r\nimport { Background, AboutCard } from \"./AboutPage.styles\";\r\nimport { Button, Icon, Image, Grid } from \"semantic-ui-react\"\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport imagegirl from '../../images/imagegirl.jpg';\r\nimport { FaGlobeAsia } from 'react-icons/fa';\r\nconst AboutPage = () => {\r\n\r\n  return (\r\n    <PortalLayout>\r\n      <div className=\"image\">\r\n        <Background>\r\n          <br />\r\n          <br />\r\n          <AboutCard>\r\n            <Grid >\r\n              <Grid.Column width={3}>\r\n                <Image src={imagegirl} size='small' circular />\r\n                <h2><FaGlobeAsia color=\"maroon\" />{\" Singapore\"}</h2>\r\n                <Button color='linkedin' onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.location.href = 'https://www.linkedin.com/in/hui-ying-ooi';\r\n                }}><Icon name='linkedin' />My Linkedin</Button>\r\n                <br></br>\r\n                <br></br>\r\n                <Button color='black' onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.location.href = 'https://github.com/ooihuiying';\r\n                }}><Icon name='github' />My GitHub</Button>\r\n                <br></br>\r\n                <br></br>\r\n                <Button color='purple' onClick={(e) => {\r\n                  e.preventDefault();\r\n                  window.location.href = 'https://medium.com/@liverungrow';\r\n                }}><Icon name='medium' />My Medium</Button>\r\n              </Grid.Column>\r\n              <Grid.Column width={12}>\r\n                <h1>About Me</h1>\r\n                <br />\r\n                <p> Hello 你好, I am Hui Ying. I'm a software engineer, earnest reader and writer with an overactive imagination. I am also an avid runner and I enjoy\r\n                  being in nature! </p>\r\n                <p>I have recently graduated from the National University of Singapore with a degree in Computer Science.</p>\r\n                <p>While I don’t have the best language skills, I do enjoy reading, writing and documenting things I have learned.\r\n                The intention of this website is to serve as a repository of articles, which i hope to write, in the areas of topics that\r\n                i am interested in. </p>\r\n                <p>I really hope you will enjoy reading my articles in this website.</p>\r\n                <p>Have a nice day!</p>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </AboutCard>\r\n        </Background>\r\n      </div>\r\n    </PortalLayout >\r\n  );\r\n};\r\n\r\nexport default AboutPage;\r\n","import styled from 'styled-components';\r\nimport bluesea from '../../images/bluesea.jpg';\r\n\r\nexport const Container = styled.div`\r\n  background-color: rgba(255,255,255,0.5);\r\n  font-size: 20px;\r\n  font-family: cursive;\r\n  width: calc(100% - 200px);\r\n  margin: 100px;\r\n  text-align: left;\r\n  padding: 80px;\r\n`\r\n\r\nexport const ImageContainer = styled.div`\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n\r\n\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-image: url('${bluesea}');;\r\n  background-size: cover;\r\n  background-attachment:fixed;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  align-items: center;\r\n`\r\n","import React, { useEffect, useState } from 'react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { Container, Background, ImageContainer } from './FullArticlePage.styles';\r\nimport { useLocation } from 'react-router-dom'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { Divider } from 'semantic-ui-react';\r\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\r\nimport FirebaseWrapper from '../../api/connect-firebase';\r\n\r\nconst FullArticlePage = () => {\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchPost() {\r\n      if (location.state != undefined) {\r\n        // (1) Derive data from the query input\r\n        const data = location.state.post;\r\n        setData(data);\r\n        setLoading(false);\r\n      } else {\r\n        // (2) Derive data from the Database based on query url\r\n        setLoading(true);\r\n        const query_str = location.pathname.substring(1).split(\"/\") // '/full_article' + pathname + '/' + id\r\n        const pathname = query_str[1]\r\n        const id = query_str[2]\r\n        const db = FirebaseWrapper.ref(pathname + \"/\" + id)\r\n        var data = await db.getSinglePost().then((post) => {\r\n          if (post) {\r\n            // contains {title, text, date, topImage, tag, id}\r\n            return post\r\n          }\r\n        });\r\n        setData(data);\r\n        setLoading(false);\r\n      }\r\n    }\r\n    fetchPost();\r\n  }, []);\r\n\r\n  return (\r\n    <PortalLayout>\r\n      <Background >\r\n        {!loading ?\r\n          <Container>\r\n            {data.tag != undefined ? <a className=\"ui red tag label\">{data.tag}</a> : <div />}\r\n            <h1 as='h2'>{data.title || \"\"}</h1>\r\n            {data.topImage ? (\r\n              <ImageContainer>\r\n                <img\r\n                  src={data.topImage}\r\n                  alt=\"Image\"\r\n                  className=\"ui centered massive image\"\r\n                />\r\n              </ImageContainer>\r\n            ) : (<div></div>)}\r\n            <Divider horizontal>{data.date || \"\"}</Divider>\r\n            <div>{ReactHtmlParser(data.text || \"\")}</div>\r\n          </Container>\r\n          : <LoadSpinner />}\r\n      </Background>\r\n    </PortalLayout >\r\n  );\r\n};\r\n\r\nexport default FullArticlePage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Switch, HashRouter } from 'react-router-dom';\r\nimport LatestPage from './pages/LatestPage/LatestPage';\r\nimport AboutPage from './pages/AboutPage/AboutPage';\r\nimport QuotesPage from './pages/QuotesPage/QuotesPage';\r\nimport Error404 from './pages/ErrorPage/Error404';\r\nimport { ErrorHandler } from './ErrorHandler';\r\nimport DetailsPage from './pages/DetailsPage/DetailsPage';\r\nimport FullArticlePage from './pages/FullArticlePage/FullArticlePage';\r\nimport book_reviews_img from '../src/images/flowers.jpg';\r\nimport chinese_img from '../src/images/hill.jpg';\r\nimport globe_img from '../src/images/trailer.jpg';\r\nimport compsci_img from '../src/images/bluemountains.jpg';\r\nimport reflect_img from '../src/images/reflect.jpg';\r\nimport FirebaseWrapper from '../src/api/connect-firebase';\r\n\r\nrequire(\"dotenv\").config({ path: __dirname + \"/.env\" });\r\nconst cs_db = FirebaseWrapper.ref('/cs-posts')\r\nconst bk_db = FirebaseWrapper.ref('/book-reviews-posts')\r\nconst chi_db = FirebaseWrapper.ref('/chinese-culture-posts')\r\nconst gb_db = FirebaseWrapper.ref('/globe-trotting-posts')\r\nconst rf_db = FirebaseWrapper.ref('/reflection-posts')\r\n\r\n// Important to only use Hashrouter. Cannot use Browserrouter for github page.\r\nReactDOM.render(\r\n  <HashRouter >\r\n    <ErrorHandler>\r\n      <Switch>\r\n        <Route exact path=\"/\" ><AboutPage /></Route>\r\n        <Route exact path=\"/latest\"><LatestPage pathname='TOP10' /></Route>\r\n        <Route exact path=\"/tech-world\"><DetailsPage pathname='/cs-posts' image={compsci_img} title='Tech World' db={cs_db} /></Route>\r\n        <Route exact path=\"/book-reviews\"><DetailsPage pathname='/book-reviews-posts' image={book_reviews_img} title='Book Reviews' db={bk_db} /></Route>\r\n        <Route exact path=\"/chinese-culture\"><DetailsPage pathname='/chinese-culture-posts' image={chinese_img} title='Chinese Culture' db={chi_db} /></Route>\r\n        <Route exact path=\"/globe_trotting\"><DetailsPage pathname='/globe-trotting-posts' image={globe_img} title='Globe Trotting' db={gb_db} /></Route>\r\n        <Route exact path=\"/quotes\"><QuotesPage /></Route>\r\n        <Route exact path=\"/reflections\"><DetailsPage pathname='/reflection-posts' image={reflect_img} title='Reflections' db={rf_db} /></Route>\r\n        <Route path=\"/full_article\"><FullArticlePage /></Route>\r\n        <Route path=\"*\" component={Error404} />\r\n      </Switch>\r\n    </ErrorHandler>\r\n  </HashRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n/*\r\nQuotes\r\nGlobe Trotting\r\nReflections\r\nChinese Culture\r\nBook Reviews\r\nTech World\r\n*/","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport theme from '../config/theme';\r\n\r\nexport const PortalLayoutStyled = styled('div')`\r\n  height: 100%;\r\n  width: 100%;\r\n  \r\n\r\n  .layout--main {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n\r\n    .layout--navbar {\r\n      padding-top: 50px;\r\n      padding-bottom: 50px;\r\n      padding-right: 50px;\r\n      padding-left: 50px;\r\n      width: 100%;\r\n      height: 10%;\r\n      align-items: center;\r\n      position: fixed;\r\n      z-index: 9999;\r\n      background-color: ${theme.colours.white};\r\n      display: flex;\r\n      justify-content: space-between;\r\n\r\n      .navbar--item {\r\n        display: inline-flex;\r\n        justify-content: space-between;\r\n        overflow-x: auto;\r\n        overflow-y: hidden;\r\n      }\r\n\r\n      .navbar--title {\r\n        display: inline-flex;\r\n        justify-content: space-between;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        height: 30px;\r\n      }\r\n    }\r\n\r\n    .layout--children {\r\n      flex: 1 1 auto;\r\n      margin-top: 150px;\r\n      background-color: ${theme.colours.white};\r\n      text-align: center;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavItem = styled(Link)`\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: ${theme.colours.maroon};\r\n  padding: 0px 0px 0px 40px;\r\n\r\n  :hover {\r\n    color: ${theme.colours.maroon};\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const NavTitle = styled(Link)`\r\n  font-size: 40px;\r\n  font-weight: bold;\r\n  color: ${theme.colours.maroon};\r\n`;\r\n","import React from 'react';\r\n\r\nimport { PortalLayoutStyled, NavTitle, NavItem } from './PortalLayout.styles';\r\n\r\nconst PortalLayout = ({ children }) => {\r\n  return (\r\n    <PortalLayoutStyled>\r\n      <div className=\"layout--main\">\r\n        <div className=\"layout--navbar\">\r\n          <div className=\"navbar--title\" >\r\n            <NavTitle to=\"/\">Hui Ying</NavTitle>\r\n          </div>\r\n          <div className=\"navbar--item\">\r\n            <NavItem to=\"/latest\">\r\n              Latest\r\n            </NavItem>\r\n            <NavItem to=\"/tech-world\">\r\n              Tech World\r\n            </NavItem>\r\n            <NavItem to=\"/book-reviews\">\r\n              Book Reviews\r\n            </NavItem>\r\n            <NavItem to=\"/chinese-culture\">\r\n              Chinese Culture\r\n            </NavItem>\r\n            <NavItem to=\"/globe_trotting\">\r\n              Globe Trotting\r\n            </NavItem>\r\n            <NavItem to=\"/quotes\">\r\n              Quotes\r\n            </NavItem>\r\n            <NavItem to=\"/reflections\">\r\n              Reflections\r\n            </NavItem>\r\n          </div>\r\n        </div>\r\n        <div className=\"layout--children\">{children}</div>\r\n        <div className=\"layout--footer\">\r\n\r\n        </div>\r\n      </div>\r\n    </PortalLayoutStyled>\r\n  );\r\n};\r\nexport default PortalLayout;\r\n","import firebase from 'firebase'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.FIREBASE_API_KEY,\r\n    authDomain: \"ooijournal.firebaseapp.com\",\r\n    databaseURL: \"https://ooijournal.firebaseio.com\",\r\n    projectId: \"ooijournal\",\r\n    storageBucket: \"ooijournal.appspot.com\",\r\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.FIREBASE_API_ID,\r\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n/**\r\n * Wrapper class to interface with firebase\r\n * Orderby needs to be there in order for StartAfter, StartAt, endAt etc to work. IT defined\r\n * the field of start/end value\r\n * \r\n * The retrieval of data is done in a reverse manner. We want to retrieve the post with the\r\n * latest date - most recent - instead of post with smallest date.\r\n */\r\nclass FirebaseWrapper {\r\n\r\n    constructor(path) {\r\n        this._ref = firebase.database().ref(path);\r\n        this.lastDocument = null;\r\n        this.firstDocument = null;\r\n        this.LIMIT = 10;\r\n    }\r\n\r\n    static ref(path) {\r\n        return new FirebaseWrapper(path);\r\n    }\r\n\r\n    getSinglePost() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .once(\"value\")\r\n            .then(post => {\r\n                return post.val();\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    getAllPosts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    var newPost = post.val();\r\n                    newPost['id'] = post.key;\r\n                    total = [newPost].concat(total);\r\n                })\r\n                return total;\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    get10Posts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .limitToLast(this.LIMIT)\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                var temp = [];\r\n                snapshot.forEach(post => {\r\n\r\n                    //add new element to the front of the array\r\n                    var newPost = post.val();\r\n                    newPost['id'] = post.key;\r\n                    temp = temp.concat(newPost.date);\r\n                    total = [newPost].concat(total);\r\n                })\r\n                if (temp.length > 0) {\r\n                    this.lastDocument = temp[temp.length - 1];\r\n                    this.firstDocument = temp[0];\r\n                }\r\n                return total;\r\n            }).catch(console.error);\r\n    }\r\n\r\n    getPrev10Posts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .limitToFirst(this.LIMIT)\r\n            .startAfter(this.lastDocument) // exclusive\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                var temp = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    var newPost = post.val();\r\n                    newPost['id'] = post.key;\r\n                    temp = temp.concat(newPost.date);\r\n                    total = [newPost].concat(total);\r\n                })\r\n                if (temp.length > 0) {\r\n                    this.lastDocument = temp[temp.length - 1];\r\n                    this.firstDocument = temp[0];\r\n                }\r\n                return total;\r\n            }).catch(console.error);\r\n    }\r\n\r\n    getNext10Posts() {\r\n        return this._ref\r\n            .orderByChild(\"date\") // date in ascending order\r\n            .limitToLast(this.LIMIT + 1)\r\n            .endBefore(this.firstDocument) // exclusive\r\n            .once(\"value\")\r\n            .then(snapshot => {\r\n                let total = [];\r\n                var temp = [];\r\n                snapshot.forEach(post => {\r\n                    //add new element to the front of the array\r\n                    var newPost = post.val();\r\n                    newPost['id'] = post.key;\r\n                    temp = temp.concat(newPost.date);\r\n                    total = [newPost].concat(total);\r\n                })\r\n                if (temp.length > 0) {\r\n                    this.lastDocument = temp[temp.length - 1];\r\n                    this.firstDocument = temp[0];\r\n                }\r\n                return total;\r\n            }).catch(console.error);\r\n    }\r\n}\r\n\r\nexport default FirebaseWrapper;\r\n","import React from 'react';\r\n\r\nexport const NoPostHeader = ({ style }) => {\r\n  return (\r\n    <h1 style={style}>No Post Yet!</h1>\r\n  );\r\n};\r\n","import theme from '../../config/theme';\r\nimport styled from 'styled-components';\r\n\r\nexport const SegmentStyle = {\r\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\r\n  overflow: 'auto',\r\n  display: 'block'\r\n};\r\n\r\nexport const ClickMore = styled.span`\r\n  background-color: ${theme.colours.white};\r\n  :hover {\r\n    background-color: ${theme.colours.maroon};\r\n    cursor: pointer;\r\n  }\r\n`;","import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Segment } from 'semantic-ui-react';\r\nimport { SegmentStyle, ClickMore } from './DetailCard.styles';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport const DetailCard = ({\r\n  result, pathname\r\n} = {}) => {\r\n  const history = useHistory();\r\n\r\n  const handleClick = async () => {\r\n    const query = {\r\n      title: result.title,\r\n      text: result.text,\r\n      date: result.date,\r\n      topImage: result.topImage,\r\n      tag: result.tag,\r\n      id: result.id\r\n    };\r\n\r\n    history.push({\r\n      pathname: '/full_article' + pathname + '/' + result.id,\r\n      state: { post: query }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Segment style={SegmentStyle}>\r\n      <div className=\"ui items\">\r\n        <div className=\"item\">\r\n          {result.topImage != null ? (\r\n            <div className=\"image\">\r\n              <img\r\n                src={result.topImage}\r\n                alt=\"Image\"\r\n                width=\"200\"\r\n                height=\"121\"\r\n              />\r\n            </div>\r\n          ) : (<div />)}\r\n          <div className=\"content\">\r\n            <div className=\"header\">{result.title}</div>\r\n            <div className=\"meta\">{result.date}</div>\r\n            <div>{result.text.length > 1000 ? ReactHtmlParser(result.text.slice(0, 1000)) : ReactHtmlParser(result.text) || \"\"}</div>\r\n            <ClickMore className=\"meta\" onClick={handleClick} >{\"................. View More ..................\"}</ClickMore>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Segment>\r\n\r\n  );\r\n};\r\n","export const SegmentStyle = {\r\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\r\n};\r\n","import React from 'react';\r\nimport { Segment, Placeholder } from 'semantic-ui-react';\r\nimport { SegmentStyle } from './EmptyDetailCard.styles';\r\n\r\nexport const EmptyDetailCard = () => {\r\n  return (\r\n    <Segment style={SegmentStyle}>\r\n      <div className=\"ui items\">\r\n        <div className=\"item\">\r\n          <div className=\"image\">\r\n            <Placeholder>\r\n              <Placeholder.Image />\r\n            </Placeholder>\r\n          </div>\r\n          <div className=\"content\">\r\n            <Placeholder>\r\n              <Placeholder.Line length=\"full\" />\r\n              <Placeholder.Line length=\"very long\" />\r\n              <Placeholder.Line length=\"long\" />\r\n              <Placeholder.Line length=\"medium\" />\r\n            </Placeholder>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Segment>\r\n  );\r\n};\r\n","import theme from '../../config/theme';\r\nimport styled from 'styled-components';\r\n\r\nconst style = {\r\n  text: {\r\n    textAlign: 'center',\r\n  }\r\n};\r\n\r\nexport const Header = styled.h1`\r\n  text-align: center;\r\n  background-color: rgba(255,255,255,0.5);\r\n`\r\nexport const Background = styled.div`\r\n  position: absolute;\r\n  min-width: 100%;\r\n  min-height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  background-image: ${(props) => 'url(' + props.image + ')'};\r\n  background-size: cover;\r\n  background-attachment:fixed;\r\n  -webkit-background-size: cover;\r\n  -moz-background-size: cover;\r\n  -o-background-size: cover;\r\n  align-items: center;\r\n`\r\n\r\nexport const PostsCard = styled.div`\r\n  margin: 100px;\r\n  text-align: left;\r\n  padding: 80px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n }\r\n`\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  text-align: end;\r\n`;\r\n\r\nexport default style;\r\n","import styled from 'styled-components';\r\nimport theme from '../../config/theme';\r\n\r\nexport const Explore = styled.span`\r\n  font-size: 50px;\r\n  font-weight: bold;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  color: ${theme.colours.maroon};\r\n  :hover {\r\n    background-color: rgba(255,255,255,0.5);\r\n  }\r\n`;\r\nexport const ButtonText = styled.span`\r\n  font-size: 1rem;\r\n  margin-right: 10px;\r\n`;\r\n","import React from 'react';\r\nimport { FiArrowRightCircle, FiArrowLeftCircle } from 'react-icons/fi';\r\nimport { Explore, ButtonText } from './ExploreButton.styles';\r\n\r\nexport const ExploreButton = ({ handleExploreButtonClick, text, pointRight } = {}) => (\r\n  <div>\r\n    <Explore\r\n      onClick={handleExploreButtonClick}\r\n    >\r\n      <ButtonText>{text}</ButtonText>\r\n      {pointRight ? <FiArrowRightCircle /> : <FiArrowLeftCircle />}\r\n    </Explore>\r\n  </div>\r\n);\r\n","import { Grid } from 'semantic-ui-react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\nimport { DetailCard } from '../../components/DetailCard/DetailCard';\r\nimport { EmptyDetailCard } from '../../components/EmptyDetailCard/EmptyDetailCard';\r\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\r\nimport style, { ButtonWrapper, Background, PostsCard, Header } from './DetailsPage.styles';\r\nimport { ExploreButton } from '../../components/ExploreButton/ExploreButton';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst DetailsPage = ({ pathname, image, title, db }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  async function fetchPosts() {\r\n    setLoading(true)\r\n    var response = await db.get10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage (optional), tag, id}\r\n        return posts\r\n      }\r\n    });\r\n\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    } else {\r\n      setData([])\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchNextPosts() {\r\n    setLoading(true)\r\n    var response = await db.getNext10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage (optional), tag, id}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  async function fetchPrevPosts() {\r\n    setLoading(true)\r\n    var response = await db.getPrev10Posts().then((posts) => {\r\n      if (posts) {\r\n        // contains {title, text, date, topImage (optional), tag, id}\r\n        return posts\r\n      }\r\n    });\r\n    if (response.length > 0) {\r\n      setData(response)\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n  const handlePrevButtonClick = async () => {\r\n    fetchPrevPosts();\r\n  }\r\n  const handleNextButtonClick = async () => {\r\n    fetchNextPosts();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Trigger fetchPosts if the title changes\r\n    fetchPosts();\r\n  }, [title]);\r\n\r\n  return (\r\n    <PortalLayout>\r\n      <div className=\"image\">\r\n        <Background image={image}>\r\n          <br />\r\n          <br />\r\n          <PostsCard>\r\n            <div>\r\n              <Header>{title}</Header>\r\n              {loading ? (\r\n                <div>\r\n                  <div className=\"row\">\r\n                    <Grid centered stackable columns={1}>\r\n                      <Grid.Column width={10}>\r\n                        {[...Array(10)].map(() => (\r\n                          <EmptyDetailCard />\r\n                        ))}\r\n                      </Grid.Column>\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              ) : !loading && data.length > 0 ? (\r\n                <div>\r\n                  <div className=\"row\">\r\n                    <Grid centered stackable columns={1}>\r\n                      <Grid.Column>\r\n                        {data.map((result) => (\r\n                          <DetailCard result={result} pathname={pathname} />\r\n                        ))}\r\n                      </Grid.Column>\r\n                    </Grid>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <NoPostHeader style={style.text} />\r\n              )}\r\n              {data.length > 0 ? (\r\n                <Grid centered stackable columns={2}>\r\n                  <Grid.Row >\r\n                    <ButtonWrapper>\r\n                      <ExploreButton handleExploreButtonClick={handlePrevButtonClick} text={\"\"} pointRight={false} />\r\n                    </ButtonWrapper>\r\n                    <ButtonWrapper>\r\n                      <ExploreButton handleExploreButtonClick={handleNextButtonClick} text={\"\"} pointRight={true} />\r\n                    </ButtonWrapper>\r\n                  </Grid.Row>\r\n                </Grid>\r\n              ) : (<div />)}\r\n            </div>\r\n          </PostsCard>\r\n        </Background>\r\n      </div>\r\n    </PortalLayout >\r\n  );\r\n};\r\n\r\nexport default DetailsPage;\r\n","module.exports = __webpack_public_path__ + \"static/media/bluesea.ba86a8f8.jpg\";","import React from 'react';\r\n\r\nimport main from '../../images/main.svg';\r\n\r\nconst Error404 = () => (\r\n  <img className=\"ui  centered massive image\" src={main} alt=\"Page Not Found\" />\r\n);\r\n\r\nexport default Error404;\r\n","import React from 'react';\r\nimport PortalLayout from '../../layouts/PortalLayout';\r\n\r\nconst Error400 = () => (\r\n  <PortalLayout>\r\n    <h1>Error retrieving information</h1>\r\n  </PortalLayout>\r\n);\r\n\r\nexport default Error400;\r\n","import React, {\r\n  useContext, useEffect, useState, useMemo, createContext\r\n} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Error404 from './pages/ErrorPage/Error404';\r\nimport Error400 from './pages/ErrorPage/Error400';\r\n\r\n// A context will be the way that we allow components lower down\r\n// the tree to trigger the display of an error page\r\nconst ErrorStatusContext = createContext();\r\n\r\n// The top level component that will wrap our app's core features\r\nexport const ErrorHandler = ({ children }) => {\r\n  const history = useHistory();\r\n  const [errorStatusCode, setErrorStatusCode] = useState();\r\n\r\n  // Make sure to \"remove\" this status code whenever the user\r\n  // navigates to a new URL. If we didn't do that, then the user\r\n  // would be \"trapped\" into error pages forever\r\n  useEffect(() => {\r\n    // Listen for changes to the current location.\r\n    const unlisten = history.listen(() => setErrorStatusCode(undefined));\r\n    // cleanup the listener on unmount\r\n    return unlisten;\r\n  }, [history]);\r\n\r\n  // This is what the component will render. If it has an\r\n  // errorStatusCode that matches an API error, it will only render\r\n  // an error page. If there is no error status, then it will render\r\n  // the children as normal\r\n  const renderContent = () => {\r\n    if (errorStatusCode === 404) {\r\n      return <Error404 />;\r\n    }\r\n    if (errorStatusCode === 400) {\r\n      // Handle failed API calls\r\n      return <Error400 />;\r\n    }\r\n\r\n    // ... more HTTP codes handled here\r\n\r\n    return children;\r\n  };\r\n\r\n  // We wrap it in a useMemo for performance reasons. More here:\r\n  // https://kentcdodds.com/blog/how-to-optimize-your-context-value/\r\n  const contextPayload = useMemo(\r\n    () => ({ setErrorStatusCode }),\r\n    [setErrorStatusCode]\r\n  );\r\n\r\n  // We expose the context's value down to our components, while\r\n  // also making sure to render the proper content to the screen\r\n  return (\r\n    <ErrorStatusContext.Provider value={contextPayload}>\r\n      {renderContent()}\r\n    </ErrorStatusContext.Provider>\r\n  );\r\n};\r\n\r\n// A custom hook to quickly read the context's value. It's\r\n// only here to allow quick imports\r\nexport const useErrorStatus = () => useContext(ErrorStatusContext);\r\n","import styled from 'styled-components';\r\n\r\n// Center in screen\r\nexport const Wrapper = styled.div`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  transform: -webkit-translate(-50%, -50%);\r\n  transform: -moz-translate(-50%, -50%);\r\n  transform: -ms-translate(-50%, -50%);\r\n  z-index: 9999;\r\n`;\r\n","import React from 'react';\r\nimport ReactLoading from 'react-loading';\r\nimport theme from '../../config/theme';\r\nimport { Wrapper } from './LoadingSpinner.styles';\r\n\r\nconst LoadSpinner = () => (\r\n  <Wrapper>\r\n    <ReactLoading type=\"spin\" color={theme.colours.maroon} />\r\n  </Wrapper>\r\n);\r\n\r\nexport default LoadSpinner;\r\n"],"sourceRoot":""}