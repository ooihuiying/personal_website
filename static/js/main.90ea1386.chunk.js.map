{"version":3,"sources":["images/main.svg","images/autumn.jpg","images/huiying.JPG","images/pinkmountain.jpg","images/flowers.jpg","images/hill.jpg","images/trailer.jpg","images/bluemountains.jpg","images/reflect.jpg","components/Article/Article.styles.jsx","components/Article/Article.jsx","components/Timeline/Timeline.styles.jsx","components/Timeline/Timeline.jsx","pages/LatestPage/LatestPage.styles.jsx","pages/LatestPage/LatestPage.jsx","components/QuoteCard/QuoteCard.jsx","components/EmptyQuoteCard/EmptyQuoteCard.jsx","pages/QuotesPage/QuotesPage.styles.jsx","pages/QuotesPage/QuotesPage.jsx","pages/AboutPage/AboutPage.styles.jsx","components/ResumeSection/Resume.jsx","pages/AboutPage/AboutPage.jsx","pages/FullArticlePage/FullArticlePage.styles.jsx","pages/FullArticlePage/FullArticlePage.jsx","index.js","config/theme.js","layouts/PortalLayout.styles.jsx","layouts/PortalLayout.jsx","api/connect-firebase.js","components/ExploreButton/ExploreButton.styles.jsx","components/ExploreButton/ExploreButton.jsx","components/NoPostHeader/NoPostHeader.jsx","components/DetailCard/DetailCard.styles.jsx","components/DetailCard/DetailCard.jsx","components/EmptyDetailCard/EmptyDetailCard.styles.jsx","components/EmptyDetailCard/EmptyDetailCard.jsx","pages/DetailsPage/DetailsPage.styles.jsx","pages/DetailsPage/DetailsPage.jsx","images/bluesea.jpg","pages/ErrorPage/Error404.jsx","pages/ErrorPage/Error400.jsx","ErrorHandler.jsx","components/LoadSpinner/LoadingSpinner.styles.jsx","components/LoadSpinner/LoadSpinner.jsx"],"names":["module","exports","SimpleContainer","styled","div","ImageContainer","Article","post","history","useHistory","handleClick","a","query","title","text","date","topImage","tag","id","push","pathname","state","Header","as","ReactHtmlParser","className","src","bluesea","alt","Divider","horizontal","length","slice","ExploreButton","handleExploreButtonClick","pointRight","TimelineText","span","TimelineDot","props","active","theme","colours","maroon","grey","TimelineVerticalLine","TimelineWrapper","ArrowUp","ArrowDown","Timeline","allPosts","onClick","useState","start","setStart","end","setEnd","displayPosts","color","size","map","item","key","style","main","height","backgroundColor","display","paddingTop","LatestPage","latestPost","useRef","setActive","loading","setLoading","setErrorStatusCode","useErrorStatus","useEffect","FirebaseWrapper","ref","getAllPosts","then","posts","response","current","fetchLatestPosts","PortalLayout","Grid","Column","width","activeItem","LoadSpinner","NoPostHeader","QuoteCard","getColor","Math","random","Card","raised","Content","Meta","Description","EmptyQuoteCard","Placeholder","Line","h1","PostsCard","Background","image","card","paddingLeft","paddingRight","paddingBottom","textAlign","db","Quotes","data","setData","fetchQuotesPosts","quoteImage","Group","centered","Array","result","index","autumn","AboutCard","black","Resume","activeIndex","setActiveIndex","e","titleProps","Icon","name","Accordion","fluid","Title","AboutPage","Image","imagegirl","Button","preventDefault","window","location","href","Container","FullArticlePage","useLocation","undefined","query_str","substring","split","getSinglePost","fetchPost","require","config","path","__dirname","cs_db","bk_db","chi_db","gb_db","rf_db","ReactDOM","render","exact","compsci_img","book_reviews_img","chinese_img","globe_img","reflect_img","component","Error404","document","getElementById","white","lightGrey","breakpoint","widescreen","desktop","tablet","mobile","PortalLayoutStyled","NavItem","Link","NavTitle","children","to","firebaseConfig","apiKey","process","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_API_ID","measurementId","FIREBASE_MEASUREMENT_ID","firebase","initializeApp","this","_ref","database","lastDocument","firstDocument","LIMIT","newTitle","orderByChild","once","newPost","val","formatPost","catch","console","error","snapshot","total","forEach","concat","limitToLast","temp","limitToFirst","startAfter","endBefore","Explore","ButtonText","SegmentStyle","overflow","DetailCard","Segment","EmptyDetailCard","ButtonWrapper","DetailsPage","get10Posts","fetchNextPosts","getNext10Posts","fetchPrevPosts","getPrev10Posts","handlePrevButtonClick","handleNextButtonClick","fetchPosts","stackable","columns","Row","Error400","ErrorStatusContext","createContext","ErrorHandler","errorStatusCode","listen","contextPayload","useMemo","Provider","value","useContext","Wrapper","type"],"mappings":"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","file":"static/js/main.90ea1386.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.5198f0b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/autumn.7fd69f42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/huiying.ecb3efa8.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pinkmountain.4fc7b0e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flowers.780030e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hill.58d9926a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trailer.decf04ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bluemountains.792b1428.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reflect.05a08e81.jpg\";","import styled from 'styled-components';\n\nexport const SimpleContainer = styled.div`\n  text-align: left;\n  margin: auto;\n  padding-bottom: 100px;\n`;\n\nexport const ImageContainer = styled.div`\n  display: block;\n  margin: auto;\n`;\n\n","import React from 'react';\nimport { Divider, Header } from 'semantic-ui-react';\nimport bluesea from '../../images/bluesea.jpg';\nimport ReactHtmlParser from 'react-html-parser';\nimport { ImageContainer, SimpleContainer } from './Article.styles'\nimport { ExploreButton } from '../ExploreButton/ExploreButton'\nimport { useHistory } from 'react-router-dom';\n\n// post: {title, text, date, topImage, tag}\n// Accessed from the Latest Page\nexport const Article = ({ post } = {}) => {\n\n  const history = useHistory();\n\n  const handleClick = async () => {\n    const query = {\n      title: post.title,\n      text: post.text,\n      date: post.date,\n      topImage: post.topImage,\n      tag: post.tag,\n      id: post.id\n    };\n\n    history.push({\n      pathname: '/full_article/' + post.tag + '/' + post.id,\n      state: { post: query }\n    });\n  }\n\n  return (\n    <SimpleContainer>\n      <Header as='h2'>{ReactHtmlParser(post.title) || \"\"}</Header>\n      <a className=\"ui red tag label\">{post.tag}</a>\n      <br />\n      <br />\n      <ImageContainer>\n        <img\n          src={post.topImage || bluesea}\n          alt=\"Image\"\n          className=\"ui centered massive image\"\n        />\n      </ImageContainer>\n      <Divider horizontal>{post.date || \"\"}</Divider>\n      <div>{post.text.length > 1000 ? ReactHtmlParser(post.text.slice(0, 1000) + \" ......\") : ReactHtmlParser(post.text + \" ......\") || \"\"}</div>\n      <br></br>\n      <ExploreButton handleExploreButtonClick={handleClick} text={\"Read More\"} pointRight={true} />\n    </SimpleContainer>\n  );\n};\n","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const TimelineText = styled.span`\n  place-content: center;\n  width: calc(50vw + 50%);\n  margin-left: 40px;\n`;\n\nexport const TimelineDot = styled.span`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-top: 40px;\n  margin-bottom: 20px;\n  margin-left: -11px;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  position: relative;\n  z-index: 999;\n\n  background-color: ${(props) => (props.active ? theme.colours.maroon : theme.colours.grey)};\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n\nexport const TimelineVerticalLine = styled.div`\n  width: 3px;\n  margin-left: 90px;\n  background-color: ${theme.colours.grey};\n`;\n\nexport const TimelineWrapper = styled.div`\n  display: flex;\n  padding: 10px 0 20px;\n  justify-content: space-between;\n`;\n\nexport const ArrowUp = styled.div`\n  position: absolute;\n  margin-left: 76px;\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n\nexport const ArrowDown = styled.div`\n  position: absolute;\n  margin-left: 76px;\n  margin-top: -30px;\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n","import React, { useState } from 'react';\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\nimport {\n  TimelineWrapper,\n  TimelineVerticalLine,\n  TimelineDot,\n  TimelineText,\n  ArrowUp, ArrowDown\n} from './Timeline.styles';\nimport theme from '../../config/theme';\n\n// allPosts: {title, text, date, topImage}\nexport const Timeline = ({ allPosts, active, onClick } = {}) => {\n  // Note that we will not display all latest posts at once.\n  // At any point, there will only be 5 items showing in the timeline\n  // Start and End are the Indexes of the latest posts that we will show\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(5);\n\n  const displayPosts = allPosts.slice(start, end);\n\n  return (\n    <div>\n      {start > 0\n        ? (\n          <ArrowUp onClick={() => {\n            setStart(start - 1);\n            setEnd(end - 1);\n          }}\n          >\n            <FaAngleDoubleUp color={theme.colours.maroon} size={30} />\n          </ArrowUp>\n        )\n        : ''}\n      <TimelineVerticalLine>\n        {displayPosts.map((item) => (\n          <TimelineWrapper key={item.title} onClick={() => onClick(item)}>\n            <TimelineDot\n              onClick={() => onClick(item)}\n              id={item}\n              active={active && active.title === item.title}\n            >\n              <TimelineText>{item.date}</TimelineText>\n            </TimelineDot>\n          </TimelineWrapper>\n        ))}\n      </TimelineVerticalLine>\n      {end < allPosts.length\n        ? (\n          <ArrowDown onClick={() => {\n            setStart(start + 1);\n            setEnd(end + 1);\n          }}\n          >\n            <FaAngleDoubleDown color={theme.colours.maroon} size={30} />\n          </ArrowDown>\n        )\n        : ''}\n    </div>\n  );\n};\n","const style = {\n  main: {\n    height: '100vh',\n    backgroundColor: 'white',\n    display: 'flex',\n    paddingTop: '200px',\n  }\n};\n\nexport default style;\n","import React, { useState, useEffect, useRef } from 'react';\nimport {\n  Grid\n} from 'semantic-ui-react';\nimport { Article } from '../../components/Article/Article';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { Timeline } from '../../components/Timeline/Timeline';\nimport style from './LatestPage.styles';\nimport { useErrorStatus } from '../../ErrorHandler';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\nimport FirebaseWrapper from '../../api/connect-firebase';\n\nconst LatestPage = ({ pathname }) => {\n\n  const latestPost = useRef([]);\n  const [active, setActive] = useState();\n  const [loading, setLoading] = useState(true);\n  const { setErrorStatusCode } = useErrorStatus();\n\n  useEffect(() => {\n    async function fetchLatestPosts() {\n      try {\n        setLoading(true);\n        var response = await FirebaseWrapper.ref(pathname).getAllPosts().then((posts) => {\n          if (posts) {\n            // contains {title, text, date, topImage (optional), tag, id}\n            return posts\n          }\n        });\n        latestPost.current = response\n        setActive(latestPost.current[0])\n        setLoading(false)\n      } catch (e) {\n        // Show error message\n        setErrorStatusCode(400);\n      }\n    }\n    fetchLatestPosts();\n  }, [setErrorStatusCode]);\n\n  const handleTimelineChange = (activeItem) => {\n    setActive(activeItem);\n  };\n\n  return (\n    <PortalLayout>\n      {!loading && latestPost.current.length > 0 ? (\n        <div style={style.main}>\n          <Grid>\n            <Grid.Column width={4}>\n              <Timeline\n                allPosts={latestPost.current}\n                active={active}\n                onClick={handleTimelineChange}\n              />\n            </Grid.Column>\n            <Grid.Column width={11}>\n              <Article post={active} />\n            </Grid.Column>\n          </Grid>\n        </div>\n      )\n        : loading ? (\n          <LoadSpinner />\n        ) : <NoPostHeader />}\n    </PortalLayout>\n  );\n};\n\nexport default LatestPage;\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport const QuoteCard = ({ post } = {}) => {\n\n  function getColor() {\n    return \"hsla(\" + ~~(360 * Math.random()) + \",\" +\n      \"70%,\" +\n      \"80%,1)\"\n  }\n\n  return (\n    <Card raised={true} style={{ 'background-color': getColor() }} >\n      <Card.Content>\n        <Card.Header>{ReactHtmlParser(post.title)}</Card.Header>\n        <Card.Meta>{post.date}</Card.Meta>\n        <Card.Description>\n          <div>{ReactHtmlParser(post.text || \"\")}</div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n\n  );\n};\n","import React from 'react';\nimport { Placeholder, Card } from 'semantic-ui-react';\n\nexport const EmptyQuoteCard = () => {\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Placeholder>\n          <Placeholder.Line length=\"full\" />\n          <Placeholder.Line length=\"very long\" />\n          <Placeholder.Line length=\"long\" />\n          <Placeholder.Line length=\"medium\" />\n        </Placeholder>\n      </Card.Content>\n    </Card>\n  );\n};\n","import styled from 'styled-components';\n\nconst style = {\n  card: {\n    paddingLeft: '100px',\n    paddingRight: '100px',\n    paddingBottom: '50px'\n  },\n\n  image: {\n    paddingLeft: '100px',\n    paddingRight: '100px',\n    paddingBottom: '50px'\n  },\n\n  text: {\n    textAlign: 'center'\n  },\n};\n\nexport const Header = styled.h1`\n  text-align: center;\n  background-color: rgba(255,255,255,0.5);\n`\n\nexport const PostsCard = styled.div`\n  margin: auto;\n  margin-top: 100px;\n  text-align: left;\n  padding: 80px;\n`\n\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: ${(props) => 'url(' + props.image + ')'};\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport default style;\n\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { QuoteCard } from '../../components/QuoteCard/QuoteCard';\nimport { EmptyQuoteCard } from '../../components/EmptyQuoteCard/EmptyQuoteCard';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport style, { Background, PostsCard, Header } from './QuotesPage.styles.jsx';\nimport FirebaseWrapper from '../../api/connect-firebase';\nimport quoteImage from '../../images/pinkmountain.jpg';\n\nconst pathName = '/quotes-posts'\nconst db = FirebaseWrapper.ref(pathName)\n\nconst Quotes = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchQuotesPosts() {\n      setLoading(true);\n      var response = await db.getAllPosts().then((posts) => {\n        if (posts) {\n          // contains {title, text, date, topImage}\n          return posts\n        }\n      });\n      setData(response);\n      setLoading(false);\n    }\n    fetchQuotesPosts();\n  }, []);\n\n  return (\n    <PortalLayout >\n      <div className=\"image\">\n        <Background image={quoteImage}>\n          <PostsCard>\n            {loading && data.length === 0 ? (\n              <div>\n                <div className=\"row\" style={style.card}>\n                  <Card.Group centered >\n                    {[...Array(4)].map(() => (\n                      <EmptyQuoteCard />\n                    ))}\n                  </Card.Group>\n                </div>\n              </div>\n            ) : (!loading && data.length === 0) ? (\n              <div>\n                <Header>My Favourite Quotes</Header>\n                <NoPostHeader style={style.text} />\n              </div>\n            ) : (\n              <div>\n                <Header>My Favourite Quotes</Header>\n                <div className=\"row\" style={style.card}>\n                  <Card.Group centered >\n                    {data.map((result, index) => (\n                      <QuoteCard post={result} />\n                    ))}\n                  </Card.Group>\n                </div>\n              </div>\n            )}\n          </PostsCard>\n        </Background>\n      </div>\n    </PortalLayout>\n  );\n};\n\nexport default Quotes;\n","import autumn from '../../images/autumn.jpg';\nimport styled from \"styled-components\";\nimport theme from '../../config/theme';\n\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: url('${autumn}');;\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport const AboutCard = styled.div`\n  background-color: rgba(255,255,255,0.5);\n  font-size: 20px;\n  width: calc(100% - 200px);\n  margin: 100px;\n  color: ${theme.colours.black};\n  text-align: left;\n  padding: 80px;\n  min-width: 750px;\n`","import React, {useState} from 'react';\nimport { Accordion, Header, Divider, Icon } from 'semantic-ui-react';\n\nexport const Resume = () => {\n    const [activeIndex, setActiveIndex] = useState(-1);\n\n    function handleClick (e, titleProps){\n        const { index } = titleProps\n        const newIndex = activeIndex === index ? -1 : index\n    \n        setActiveIndex(newIndex);\n    }\n\n  return (\n    <>\n    <Divider horizontal>\n        <Header as='h2'>\n        <Icon name='tag' />\n           My History\n        </Header>\n    </Divider>   \n    <Accordion fluid styled>\n        <Accordion.Title\n          active={activeIndex === 0}\n          index={0}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          July 2021- Mar 2023: Software Engineer II at Indeed.com \n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 0}>\n        <p>\n            <li>Part of the Localisation Tools Team</li>\n            <li>Independently implemented a multiple-component solution by enabling in-context translation previews through a Storybook add on, Jenkins, AWS S3, Spring boot Java and React Typescript</li>\n            <li>Spearheaded design and implementation of a frontend UI and backend services for internal localisation project managers to edit, search and view history changes of translation strings across Indeed teams projects</li>\n            <li>One of the main developer to build an in-house tool, involving micro services and frontend web, to replace Weblate wrapper maintenance costs for enabling outsourcing and syncing back of string translations between product teams codebases and XTM</li>\n            <li>Provided technical support and collaborated with engineers in other teams to drive adoption of Localisation Tools team's tools</li>\n            <li>Championed good software engineering practices in the team by encouraging the use of Merge Request templates and hosted software engineering design patterns study sessions</li>\n            <li>Nurtured junior engineers through mentorship in one-on-one meeting sessions</li>\n            <li>Contributed to the organisation by interviewing potential hire engineers/managers and represented Indeed at university recruitment events</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 1}\n          index={1}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          May-July 2020: Software Engineer Intern at Temasek Holdings\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 1}>\n            <p>\n                <li>Built API and UI for adding Feedback feature to mobile application for company internal usage with React-Native</li>\n                <li>Classified companies into categories using machine learning models like Bert and Sci-learn for investment analysts' usage</li>\n            </p>\n        </Accordion.Content>\n\n        <Accordion.Title\n          active={activeIndex === 2}\n          index={2}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          June-Dec 2019:  Software Engineer Intern at IQAir-AirVisual\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 2}>\n        <p>\n            <li>Used JavaScript to perform Web Scraping on different websites for the collection of air quality data to be displayed on the\nmobile AirVisual App</li>\n            <li>Developed Kibana Plugin interfaces with React-Redux to help engineers to monitor and track and manage air quality metrics displayed on the app</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 3}\n          index={3}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          Aug 2018-Jan 2019: Part-time Tutor at Coding Lab\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 3}>\n        <p>\n            <li>Taught students from ages 7-16 computational thinking, Python language and Scratch programming</li>\n            <li>Created Google Apps script to automate sign ups, class allocation and sending of lessons’ email notifications</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 4}\n          index={4}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          Aug 2017- Mar 2021: Student at National University of Singapore\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 4}>\n        <p>\n            <li>Graduated with a Bachelor of Computing in Computer Science degree</li>\n            <li>Participated in 6-month long NUS Overseas College Program in Beijing where I exchanged at Peking University and interned at AirVisual</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 5}\n          index={5}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          Feb-June 2017: Dental Assistant at Burlinson Dental Surgery \n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 5}>\n        <p>\n            <li>Assisted dentist in procedures such as scaling and polishing, dental filling and tooth extraction surgeries</li>\n            <li>Handled clinic operational duties such as replenishing dental stocks, cleaning clinic and sterilising dental tools</li>\n            <li>Performed customer support duties such as patients' appointment booking, payment management and answering enquiries</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 6}\n          index={6}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          Dec 2016-Jan 2017: Banquet Server \n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 6}>\n        <p>\n            <li>Worked at various hotels in Singapore for banquet events</li>\n            <li>Served diners meals and attended to their requests during banquet</li>\n            <li>Arranged tables and prepared culinaries</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 7}\n          index={7}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          2015-2016: Student at Victoria Junior College\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 7}>\n        <p>\n            <li>Studied Science Stream and graduated with the Singapore Cambridge A' Levels certificate</li>\n            <li>Studied H2 Physics, Chemistry, Mathematics, Economics and H1 General Paper. (H2 being of higher difficulty)</li>\n            <li>Member of Art club and Writers' circle</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 8}\n          index={8}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          2011-2014: Student at Nan Chiau High School\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 8}>\n        <p>\n            <li>Graduated with the Singapore Cambridge O' Levels certificate</li>\n            <li>Studied Advanced Mathematics, Mathematics, Physics, Chemistry, Pure Geography, Combined Humanities (Social Studies and History), Higher Chinese (more advanced version of Chinese language), English</li>\n            <li>Represented school for Basketball tournaments. My team achieved 2nd place in North zone and 8th place overall in the C' division of the 2012 Singapore Basketball Nationals</li>\n            <li>Awarded the Bicultural (English and Mandarin) scholarship given to 12 students of my cohort by the Singapore Hokkien Huay Kuan association. With this scholarship, I participated in 2-week long student exchange trips to Suzhou Foreign Language School (Shanghai and Suzhou, 2012) and Sacred Heart Girls High school (Taiwan, 2013)</li>\n            <li>Top student in cohort for combined humanities subject (Social studies and History)</li>\n            <li>Selected as 1 out of 4 students to represent school in NUS Geography Challenge and obtained individual Silver medal</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 9}\n          index={9}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          2005-2010: Student at Chong Zheng Primary School \n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 9}>\n        <p>\n            <li>Graduated with a PSLE certificate</li>\n            <li>Studied Mathematics, Science, English and Chinese</li>\n            <li>Represented school for Netball tournaments</li>\n        </p>\n        </Accordion.Content>\n        <Accordion.Title\n          active={activeIndex === 10}\n          index={10}\n          onClick={handleClick}\n        >\n          <Icon name='dropdown' />\n          11 November 1998\n        </Accordion.Title>\n        <Accordion.Content active={activeIndex === 10}>\n        <p>\n            <li>I came into this world!</li>\n        </p>\n        </Accordion.Content>\n      </Accordion>     \n    </>\n  );\n};\n","import React from \"react\";\nimport { Background, AboutCard } from \"./AboutPage.styles\";\nimport { Button, Icon, Image, Grid, Divider, Header } from \"semantic-ui-react\"\nimport PortalLayout from '../../layouts/PortalLayout';\nimport imagegirl from '../../images/huiying.JPG';\nimport { FaGlobeAsia } from 'react-icons/fa';\nimport {Resume} from '../../components/ResumeSection/Resume';\n\nconst AboutPage = () => {\n\n  return (\n    <PortalLayout>\n      <div className=\"image\">\n        <Background>\n          <br />\n          <br />\n          <AboutCard>\n            <Grid >\n              <Grid.Column width={4}>\n                <Image src={imagegirl} size='small'/>\n                <h2><FaGlobeAsia color=\"maroon\" />{\" Singapore\"}</h2>\n                <Button color='linkedin' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://www.linkedin.com/in/hui-ying-ooi';\n                }}><Icon name='linkedin' />My Linkedin</Button>\n                <br></br>\n                <br></br>\n                <Button color='red' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://drive.google.com/file/d/1oT0asRybl7qmKRakRGC3-EbN5kUnhLjA/view?usp=sharing';\n                }}><Icon name='book' />Resume Pdf</Button>\n                <br></br>\n                <br></br>\n                <Button color='black' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://github.com/ooihuiying';\n                }}><Icon name='github' />My GitHub</Button>\n                <br></br>\n                <br></br>\n                <Button color='purple' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://liverungrow11.wordpress.com/';\n                }}><Icon name='wordpress' />Running Blog</Button>\n              </Grid.Column>\n              <Grid.Column width={12}>\n                <h1>About Me</h1>\n                <br />\n                <p> Hello 你好, I am Hui Ying.</p>\n                <p> Welcome to my website! I created this website using React and JavaScript. This app is integrated with Google Firebase database.</p>\n                <p>\n                The intention of this website is to serve as a repository of articles, which i hope to write, in the areas of topics that\n                i am interested in. \n                While I don’t have the best language skills, I do enjoy reading, writing and documenting things I have learned.\n                </p>\n                <p>I really hope you will enjoy reading my articles in this website.</p>\n                <p>Have a nice day!</p>\n              </Grid.Column>\n            </Grid>\n            <br></br>\n            <br></br>\n            <Resume/>\n          </AboutCard>\n        </Background>\n      </div>\n    </PortalLayout >\n  );\n};\n\nexport default AboutPage;\n","import styled from 'styled-components';\nimport bluesea from '../../images/bluesea.jpg';\n\nexport const Container = styled.div`\n  background-color: rgba(255,255,255,0.5);\n  margin-top: 80px;\n  text-align: left;\n  padding: 80px;\n  padding-bottom: 100px;\n`\n\nexport const ImageContainer = styled.div`\n  margin: auto;\n  padding: 50px;\n`;\n\nexport const Background = styled.div`\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: url('${bluesea}');;\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n","import React, { useEffect, useState } from 'react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { Container, Background, ImageContainer } from './FullArticlePage.styles';\nimport { useLocation } from 'react-router-dom'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Divider } from 'semantic-ui-react';\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\nimport FirebaseWrapper from '../../api/connect-firebase';\nimport { DisqusComments } from '../../components/DiscuqComments/DiscuqComments';\n\nconst FullArticlePage = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    async function fetchPost() {\n      if (location.state !== undefined) {\n        // (1) Derive data from the query input\n        const data = location.state.post;\n        setData(data);\n        setLoading(false);\n      } else {\n        // (2) Derive data from the Database based on query url\n        setLoading(true);\n        const query_str = location.pathname.substring(1).split(\"/\") // '/full_article' + pathname + '/' + id\n        const pathname = query_str[1]\n        const id = query_str[2]\n        const db = FirebaseWrapper.ref(pathname + \"/\" + id)\n        var data = await db.getSinglePost(id).then((post) => {\n          if (post) {\n            // contains {title, text, date, topImage, tag, id}\n            return post\n          }\n        });\n        setData(data);\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, []);\n\n  return (\n    <PortalLayout>\n      <Background >\n        {!loading ?\n          <div>\n            <Container>\n              {data.tag !== undefined ? <a className=\"ui red tag label\">{data.tag}</a> : <div />}\n              <h1 style={{ 'textAlign': 'center' }} as='h2'>{ReactHtmlParser(data.title) || \"\"}</h1>\n              {data.topImage ? (\n                <ImageContainer>\n                  <img\n                    src={data.topImage}\n                    alt=\"Image\"\n                    className=\"ui centered massive image\"\n                  />\n                </ImageContainer>\n              ) : (<div></div>)}\n              <Divider horizontal>{data.date || \"\"}</Divider>\n              {ReactHtmlParser(data.text || \"\")}\n              {/* <div style={{ 'padding': \"100px\" }}>\n                {data.tag !== \"quotes-posts\" ?\n                  <DisqusComments post={data} url={\"https://ooihuiying.github.io/personal_website/#\" + location.pathname} />\n                  : <div></div>\n                }\n              </div> */}\n            </Container>\n          </div>\n          : <LoadSpinner />}\n      </Background>\n    </PortalLayout >\n  );\n};\n\nexport default FullArticlePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport LatestPage from './pages/LatestPage/LatestPage';\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport QuotesPage from './pages/QuotesPage/QuotesPage';\nimport Error404 from './pages/ErrorPage/Error404';\nimport { ErrorHandler } from './ErrorHandler';\nimport DetailsPage from './pages/DetailsPage/DetailsPage';\nimport FullArticlePage from './pages/FullArticlePage/FullArticlePage';\nimport book_reviews_img from '../src/images/flowers.jpg';\nimport chinese_img from '../src/images/hill.jpg';\nimport globe_img from '../src/images/trailer.jpg';\nimport compsci_img from '../src/images/bluemountains.jpg';\nimport reflect_img from '../src/images/reflect.jpg';\nimport FirebaseWrapper from '../src/api/connect-firebase';\n\nrequire(\"dotenv\").config({ path: __dirname + \"/.env\" });\nconst cs_db = FirebaseWrapper.ref('/cs-posts')\nconst bk_db = FirebaseWrapper.ref('/book-reviews-posts')\nconst chi_db = FirebaseWrapper.ref('/chinese-culture-posts')\nconst gb_db = FirebaseWrapper.ref('/globe-trotting-posts')\nconst rf_db = FirebaseWrapper.ref('/reflection-posts')\n\n// Important to only use Hashrouter. Cannot use Browserrouter for github page.\nReactDOM.render(\n  <HashRouter >\n    <ErrorHandler>\n      <Switch>\n        <Route exact path=\"/\" ><AboutPage /></Route>\n        <Route exact path=\"/latest\"><LatestPage pathname='TOP10' /></Route>\n        <Route exact path=\"/tech-world\"><DetailsPage pathname='/cs-posts' image={compsci_img} title='Tech World' db={cs_db} /></Route>\n        <Route exact path=\"/book-reviews\"><DetailsPage pathname='/book-reviews-posts' image={book_reviews_img} title='Book Reviews' db={bk_db} /></Route>\n        <Route exact path=\"/chinese-culture\"><DetailsPage pathname='/chinese-culture-posts' image={chinese_img} title='Chinese Culture' db={chi_db} /></Route>\n        <Route exact path=\"/globe_trotting\"><DetailsPage pathname='/globe-trotting-posts' image={globe_img} title='Globe Trotting' db={gb_db} /></Route>\n        <Route exact path=\"/quotes\"><QuotesPage /></Route>\n        <Route exact path=\"/reflections\"><DetailsPage pathname='/reflection-posts' image={reflect_img} title='Reflections' db={rf_db} /></Route>\n        <Route path=\"/full_article\"><FullArticlePage /></Route>\n        <Route path=\"*\" component={Error404} />\n      </Switch>\n    </ErrorHandler>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n/*\nQuotes\nGlobe Trotting\nReflections\nChinese Culture\nBook Reviews\nTech World\n*/","export default {\n  colours: {\n    white: '#ffffff',\n    black: '#000000',\n    maroon: '#960F4A',\n    grey: '#C4C4C4',\n    lightGrey: '#f4f5f6'\n  },\n  breakpoint: {\n    widescreen: '1408px',\n    desktop: '1400px',\n    tablet: '1210px',\n    mobile: '1000px'\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport theme from '../config/theme';\n\n\n\nexport const PortalLayoutStyled = styled('div')`\n  height: 100%;\n  width: 100%;\n\n  .layout--main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    .layout--navbar {\n      padding-top: 50px;\n      padding-bottom: 50px;\n      padding-right: 50px;\n      padding-left: 50px;\n      width: 100%;\n      height: 10%;\n      align-items: center;\n      position: fixed;\n      z-index: 9999;\n      background-color: ${theme.colours.white};\n      display: flex;\n      justify-content: space-between;\n\n      .navbar--item {\n        display: inline-flex;\n        justify-content: space-between;\n        overflow-x: auto;\n        overflow-y: hidden;\n      }\n\n      .navbar--title {\n        display: inline-flex;\n        justify-content: space-between;\n        flex-direction: row;\n        align-items: center;\n        height: 30px;\n      }\n    }\n  }\n`;\n\nexport const NavItem = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${theme.colours.maroon};\n  padding: 0px 0px 0px 40px;\n\n  :hover {\n    color: ${theme.colours.maroon};\n    opacity: 0.8;\n  }\n`;\n\nexport const NavTitle = styled(Link)`\n  font-size: 40px;\n  font-weight: bold;\n  color: ${theme.colours.maroon};\n`;\n","import React from 'react';\n\nimport { PortalLayoutStyled, NavTitle, NavItem } from './PortalLayout.styles';\n\nconst PortalLayout = ({ children }) => {\n  return (\n    <PortalLayoutStyled>\n      <div className=\"layout--main\">\n        <div className=\"layout--navbar\">\n          <div className=\"navbar--title\" >\n            <NavTitle to=\"/\">Hui Ying</NavTitle>\n          </div>\n          <div className=\"navbar--item\">\n            <NavItem to=\"/latest\">\n              Latest\n           </NavItem>\n            <NavItem to=\"/tech-world\">\n              Tech World\n             </NavItem>\n            <NavItem to=\"/book-reviews\">\n              Book Reviews\n             </NavItem>\n            <NavItem to=\"/chinese-culture\">\n              Chinese Culture\n             </NavItem>\n            <NavItem to=\"/globe_trotting\">\n              Globe Trotting\n            </NavItem>\n            <NavItem to=\"/quotes\">\n              Quotes\n             </NavItem>\n            <NavItem to=\"/reflections\">\n              Reflections\n             </NavItem>\n          </div>\n        </div>\n      </div>\n      {children}\n    </PortalLayoutStyled>\n\n  );\n};\nexport default PortalLayout;","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: \"ooijournal.firebaseapp.com\",\n    databaseURL: \"https://ooijournal.firebaseio.com\",\n    projectId: \"ooijournal\",\n    storageBucket: \"ooijournal.appspot.com\",\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_API_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n/**\n * Wrapper class to interface with firebase\n * Orderby needs to be there in order for StartAfter, StartAt, endAt etc to work. IT defined\n * the field of start/end value\n * \n * The retrieval of data is done in a reverse manner. We want to retrieve the post with the\n * latest date - most recent - instead of post with smallest date.\n */\nclass FirebaseWrapper {\n\n    constructor(path) {\n        this._ref = firebase.database().ref(path);\n        this.lastDocument = null;\n        this.firstDocument = null;\n        this.LIMIT = 10;\n    }\n\n    static ref(path) {\n        return new FirebaseWrapper(path);\n    }\n\n    formatPost(post) {\n        var newTitle = \"\";\n        post.title.split(\"\\n\").map(function (item) {\n            newTitle += \"<span>\" + item + \"<br /></span>\";\n        })\n        post['title'] = newTitle;\n        return post;\n    }\n\n    getSinglePost(id) {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .once(\"value\")\n            .then(post => {\n                var newPost = post.val();\n                newPost = this.formatPost(newPost);\n                newPost[\"id\"] = id;\n                return newPost;\n            })\n            .catch(console.error);\n    }\n\n    getAllPosts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    total = [newPost].concat(total);\n                })\n                return total;\n            })\n            .catch(console.error);\n    }\n\n    get10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToLast(this.LIMIT)\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n\n    getPrev10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToFirst(this.LIMIT)\n            .startAfter(this.lastDocument) // exclusive\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n\n    getNext10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToLast(this.LIMIT + 1)\n            .endBefore(this.firstDocument) // exclusive\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n}\n\nexport default FirebaseWrapper;\n","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const Explore = styled.span`\n  font-size: 50px;\n  font-weight: bold;\n  display: inline-flex;\n  align-items: center;\n  color: ${theme.colours.maroon};\n  :hover {\n    background-color: rgba(255,255,255,0.5);\n    cursor: pointer;\n  }\n`;\nexport const ButtonText = styled.span`\n  font-size: 1rem;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport { FiArrowRightCircle, FiArrowLeftCircle } from 'react-icons/fi';\nimport { Explore, ButtonText } from './ExploreButton.styles';\n\nexport const ExploreButton = ({ handleExploreButtonClick, text, pointRight } = {}) => (\n  <div>\n    <Explore\n      onClick={handleExploreButtonClick}\n    >\n      <ButtonText>{text}</ButtonText>\n      {pointRight ? <FiArrowRightCircle /> : <FiArrowLeftCircle />}\n    </Explore>\n  </div>\n);\n","import React from 'react';\n\nexport const NoPostHeader = ({ style }) => {\n  return (\n    <h1 style={style}>No Post Yet!</h1>\n  );\n};\n","export const SegmentStyle = {\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  overflow: 'auto',\n};","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Segment } from 'semantic-ui-react';\nimport { SegmentStyle } from './DetailCard.styles';\nimport ReactHtmlParser from 'react-html-parser';\nimport { ExploreButton } from '../ExploreButton/ExploreButton'\n\nexport const DetailCard = ({\n  result, pathname\n} = {}) => {\n  const history = useHistory();\n\n  const handleClick = async () => {\n    const query = {\n      title: result.title,\n      text: result.text,\n      date: result.date,\n      topImage: result.topImage,\n      tag: result.tag,\n      id: result.id\n    };\n    history.push({\n      pathname: '/full_article' + pathname + '/' + result.id,\n      state: { post: query }\n    });\n  }\n\n  return (\n    <Segment style={SegmentStyle}>\n      <div className=\"ui items\">\n        <div className=\"item\">\n          {result.topImage != null ? (\n            <div className=\"image\">\n              <img\n                src={result.topImage}\n                alt=\"Image\"\n                width=\"200\"\n                height=\"121\"\n              />\n            </div>\n          ) : (<div />)}\n          <div className=\"content\">\n            <div className=\"header\">{ReactHtmlParser(result.title)}</div>\n            <div className=\"meta\">{result.date}</div>\n            <div>{result.text.length > 500 ? ReactHtmlParser(result.text.slice(0, 500) + \" ......\") : ReactHtmlParser(result.text + \" ......\") || \"\"}</div>\n            <br></br>\n            <ExploreButton handleExploreButtonClick={handleClick} text={\"Read More\"} pointRight={true} />\n          </div>\n        </div>\n      </div>\n    </Segment>\n\n  );\n};\n","export const SegmentStyle = {\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\n","import React from 'react';\nimport { Segment, Placeholder } from 'semantic-ui-react';\nimport { SegmentStyle } from './EmptyDetailCard.styles';\n\nexport const EmptyDetailCard = () => {\n  return (\n    <Segment style={SegmentStyle}>\n      <div className=\"ui items\">\n        <div className=\"item\">\n          <div className=\"image\">\n            <Placeholder>\n              <Placeholder.Image />\n            </Placeholder>\n          </div>\n          <div className=\"content\">\n            <Placeholder>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"very long\" />\n              <Placeholder.Line length=\"long\" />\n              <Placeholder.Line length=\"medium\" />\n            </Placeholder>\n          </div>\n        </div>\n      </div>\n    </Segment>\n  );\n};\n","import styled from 'styled-components';\n\nconst style = {\n  text: {\n    textAlign: 'center',\n  }\n};\n\nexport const Header = styled.h1`\n  text-align: center;\n  background-color: rgba(255,255,255,0.5);\n`\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: ${(props) => 'url(' + props.image + ')'};\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport const PostsCard = styled.div`\n  margin: 100px;\n  text-align: left;\n  padding: 80px;\n  margin-right: auto;\n  margin-left: auto;\n }\n`\n\nexport const ButtonWrapper = styled.div`\n  text-align: end;\n`;\n\nexport default style;\n","import { Grid } from 'semantic-ui-react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { DetailCard } from '../../components/DetailCard/DetailCard';\nimport { EmptyDetailCard } from '../../components/EmptyDetailCard/EmptyDetailCard';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport style, { ButtonWrapper, Background, PostsCard, Header } from './DetailsPage.styles';\nimport { ExploreButton } from '../../components/ExploreButton/ExploreButton';\nimport React, { useEffect, useState } from 'react';\n\nconst DetailsPage = ({ pathname, image, title, db }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  async function fetchPosts() {\n    setLoading(true)\n    var response = await db.get10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n\n    if (response.length > 0) {\n      setData(response)\n    } else {\n      setData([])\n    }\n\n    setLoading(false)\n  }\n\n  async function fetchNextPosts() {\n    setLoading(true)\n    var response = await db.getNext10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n    if (response.length > 0) {\n      setData(response)\n    }\n    setLoading(false)\n  }\n\n  async function fetchPrevPosts() {\n    setLoading(true)\n    var response = await db.getPrev10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n    if (response.length > 0) {\n      setData(response)\n    }\n    setLoading(false)\n  }\n\n  const handlePrevButtonClick = async () => {\n    fetchPrevPosts();\n  }\n  const handleNextButtonClick = async () => {\n    fetchNextPosts();\n  };\n\n  useEffect(() => {\n    // Trigger fetchPosts if the title changes\n    fetchPosts();\n  }, [title]);\n\n  return (\n    <PortalLayout>\n      <div className=\"image\">\n        <Background image={image}>\n          <br />\n          <br />\n          <PostsCard>\n            <div>\n              <Header>{title}</Header>\n              {loading ? (\n                <div>\n                  <div className=\"row\">\n                    <Grid centered stackable columns={1}>\n                      <Grid.Column width={10}>\n                        {[...Array(10)].map(() => (\n                          <EmptyDetailCard />\n                        ))}\n                      </Grid.Column>\n                    </Grid>\n                  </div>\n                </div>\n              ) : !loading && data.length > 0 ? (\n                <div>\n                  <div className=\"row\">\n                    <Grid centered stackable columns={1}>\n                      <Grid.Column>\n                        {data.map((result) => (\n                          <DetailCard result={result} pathname={pathname} />\n                        ))}\n                      </Grid.Column>\n                    </Grid>\n                  </div>\n                </div>\n              ) : (\n                <NoPostHeader style={style.text} />\n              )}\n              {data.length > 0 ? (\n                <Grid centered stackable columns={2}>\n                  <Grid.Row >\n                    <ButtonWrapper>\n                      <ExploreButton handleExploreButtonClick={handlePrevButtonClick} text={\"\"} pointRight={false} />\n                    </ButtonWrapper>\n                    <ButtonWrapper>\n                      <ExploreButton handleExploreButtonClick={handleNextButtonClick} text={\"\"} pointRight={true} />\n                    </ButtonWrapper>\n                  </Grid.Row>\n                </Grid>\n              ) : (<div />)}\n            </div>\n          </PostsCard>\n        </Background>\n      </div>\n    </PortalLayout >\n  );\n};\n\nexport default DetailsPage;\n","module.exports = __webpack_public_path__ + \"static/media/bluesea.ba86a8f8.jpg\";","import React from 'react';\n\nimport main from '../../images/main.svg';\n\nconst Error404 = () => (\n  <img className=\"ui  centered massive image\" src={main} alt=\"Page Not Found\" />\n);\n\nexport default Error404;\n","import React from 'react';\nimport PortalLayout from '../../layouts/PortalLayout';\n\nconst Error400 = () => (\n  <PortalLayout>\n    <h1>Error retrieving information</h1>\n  </PortalLayout>\n);\n\nexport default Error400;\n","import React, {\n  useContext, useEffect, useState, useMemo, createContext\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Error404 from './pages/ErrorPage/Error404';\nimport Error400 from './pages/ErrorPage/Error400';\n\n// A context will be the way that we allow components lower down\n// the tree to trigger the display of an error page\nconst ErrorStatusContext = createContext();\n\n// The top level component that will wrap our app's core features\nexport const ErrorHandler = ({ children }) => {\n  const history = useHistory();\n  const [errorStatusCode, setErrorStatusCode] = useState();\n\n  // Make sure to \"remove\" this status code whenever the user\n  // navigates to a new URL. If we didn't do that, then the user\n  // would be \"trapped\" into error pages forever\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const unlisten = history.listen(() => setErrorStatusCode(undefined));\n    // cleanup the listener on unmount\n    return unlisten;\n  }, [history]);\n\n  // This is what the component will render. If it has an\n  // errorStatusCode that matches an API error, it will only render\n  // an error page. If there is no error status, then it will render\n  // the children as normal\n  const renderContent = () => {\n    if (errorStatusCode === 404) {\n      return <Error404 />;\n    }\n    if (errorStatusCode === 400) {\n      // Handle failed API calls\n      return <Error400 />;\n    }\n\n    // ... more HTTP codes handled here\n\n    return children;\n  };\n\n  // We wrap it in a useMemo for performance reasons. More here:\n  // https://kentcdodds.com/blog/how-to-optimize-your-context-value/\n  const contextPayload = useMemo(\n    () => ({ setErrorStatusCode }),\n    [setErrorStatusCode]\n  );\n\n  // We expose the context's value down to our components, while\n  // also making sure to render the proper content to the screen\n  return (\n    <ErrorStatusContext.Provider value={contextPayload}>\n      {renderContent()}\n    </ErrorStatusContext.Provider>\n  );\n};\n\n// A custom hook to quickly read the context's value. It's\n// only here to allow quick imports\nexport const useErrorStatus = () => useContext(ErrorStatusContext);\n","import styled from 'styled-components';\n\n// Center in screen\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transform: -webkit-translate(-50%, -50%);\n  transform: -moz-translate(-50%, -50%);\n  transform: -ms-translate(-50%, -50%);\n  z-index: 9999;\n`;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\nimport theme from '../../config/theme';\nimport { Wrapper } from './LoadingSpinner.styles';\n\nconst LoadSpinner = () => (\n  <Wrapper>\n    <ReactLoading type=\"spin\" color={theme.colours.maroon} />\n  </Wrapper>\n);\n\nexport default LoadSpinner;\n"],"sourceRoot":""}