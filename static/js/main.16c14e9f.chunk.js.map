{"version":3,"sources":["components/DiscuqComments/DiscuqComments.jsx","images/skater_solo.jpg","images/main.svg","images/autumn.jpg","images/huiying.JPG","images/pinkmountain.jpg","images/bluesea.jpg","images/flowers.jpg","images/hill.jpg","images/trailer.jpg","images/bluemountains.jpg","images/reflect.jpg","components/Timeline/Timeline.styles.jsx","components/Timeline/Timeline.jsx","pages/ExperiencePage/ExperiencePage.styles.jsx","components/TimelineEventDisplay/TimelineEventDisplay.styles.jsx","components/TimelineEventDisplay/TimelineEventDisplay.jsx","pages/ExperiencePage/ExperiencePage.jsx","components/QuoteCard/QuoteCard.jsx","components/EmptyQuoteCard/EmptyQuoteCard.jsx","pages/QuotesPage/QuotesPage.styles.jsx","pages/QuotesPage/QuotesPage.jsx","pages/AboutPage/AboutPage.styles.jsx","api/UseAnalyticsEventTracker.js","pages/AboutPage/AboutPage.jsx","pages/FullArticlePage/FullArticlePage.styles.jsx","pages/FullArticlePage/FullArticlePage.jsx","index.js","config/theme.js","layouts/PortalLayout.styles.jsx","layouts/PortalLayout.jsx","api/connect-firebase.js","components/NoPostHeader/NoPostHeader.jsx","components/DetailCard/DetailCard.styles.jsx","components/ExploreButton/ExploreButton.styles.jsx","components/ExploreButton/ExploreButton.jsx","components/DetailCard/DetailCard.jsx","components/EmptyDetailCard/EmptyDetailCard.styles.jsx","components/EmptyDetailCard/EmptyDetailCard.jsx","pages/DetailsPage/DetailsPage.styles.jsx","pages/DetailsPage/DetailsPage.jsx","pages/ErrorPage/Error404.jsx","pages/ErrorPage/Error400.jsx","ErrorHandler.jsx","components/LoadSpinner/LoadingSpinner.styles.jsx","components/LoadSpinner/LoadSpinner.jsx"],"names":["DisqusComments","post","url","disqusShortname","disqusConfig","id","identifier","title","shortname","config","module","exports","TimelineText","styled","span","TimelineDot","props","active","theme","colours","maroon","grey","TimelineVerticalLine","div","TimelineWrapper","ArrowUp","ArrowDown","Timeline","allPosts","onClick","useState","start","setStart","end","setEnd","displayPosts","slice","color","size","map","item","key","date","length","style","main","height","backgroundColor","paddingTop","ExperiencePageContainer","skater","TimelineContainer","EventDisplayContainer","SimpleContainer","TimelineEventDisplay","data","entry","ExperiencePage","allEvents","setAllEvents","setActive","loading","setLoading","setErrorStatusCode","useErrorStatus","useEffect","a","experienceJson","experiences","e","fetchLatestPosts","PortalLayout","activeItem","LoadSpinner","NoPostHeader","QuoteCard","getColor","Math","random","Card","raised","Content","Header","ReactHtmlParser","Meta","Description","text","EmptyQuoteCard","Placeholder","Line","h1","PostsCard","Background","image","card","paddingLeft","paddingRight","paddingBottom","textAlign","db","FirebaseWrapper","ref","Quotes","setData","getAllPosts","then","posts","response","fetchQuotesPosts","className","quoteImage","Group","centered","Array","result","index","autumn","AboutCard","black","useAnalyticsEventTracker","category","eventTracker","action","label","ReactGA","event","AboutPage","gaEventTracker","Grid","Column","width","Image","src","imagegirl","Button","preventDefault","window","location","href","Icon","name","Container","ImageContainer","bluesea","FullArticlePage","useLocation","undefined","state","query_str","pathname","substring","split","getSinglePost","fetchPost","tag","as","topImage","alt","Divider","horizontal","require","path","__dirname","cs_db","bk_db","chi_db","gb_db","rf_db","TRACKING_ID","process","FIREBASE_MEASUREMENT_ID","initialize","ReactDOM","render","exact","compsci_img","book_reviews_img","chinese_img","globe_img","reflect_img","component","Error404","document","getElementById","white","lightGrey","breakpoint","widescreen","desktop","tablet","mobile","PortalLayoutStyled","NavItem","Link","NavTitle","children","to","firebaseConfig","apiKey","FIREBASE_API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","FIREBASE_MESSAGING_SENDER_ID","appId","FIREBASE_API_ID","measurementId","firebase","initializeApp","this","_ref","database","lastDocument","firstDocument","LIMIT","newTitle","orderByChild","once","newPost","val","formatPost","catch","console","error","snapshot","total","forEach","concat","limitToLast","temp","limitToFirst","startAfter","endBefore","SegmentStyle","overflow","Explore","ButtonText","ExploreButton","handleExploreButtonClick","pointRight","DetailCard","history","useHistory","handleClick","query","push","Segment","EmptyDetailCard","ButtonWrapper","DetailsPage","get10Posts","fetchNextPosts","getNext10Posts","fetchPrevPosts","getPrev10Posts","handlePrevButtonClick","handleNextButtonClick","fetchPosts","stackable","columns","Row","Error400","ErrorStatusContext","createContext","ErrorHandler","errorStatusCode","listen","contextPayload","useMemo","Provider","value","useContext","Wrapper","type"],"mappings":"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","file":"static/js/main.16c14e9f.chunk.js","sourcesContent":["import { DiscussionEmbed } from \"disqus-react\"\nimport React from 'react';\n\nexport const DisqusComments = ({ post, url } = {}) => {\n  const disqusShortname = \"https-ooihuiying-github-io-personal-website-1\"\n  const disqusConfig = {\n    // url: url,\n    url: `${url}/${post.id}`,\n    identifier: `#${post.id}`, // Single post id\n    title: post.title // Single post title\n  }\n  return (\n    <div>\n      <DiscussionEmbed\n        shortname={disqusShortname}\n        config={disqusConfig}\n      />\n    </div>\n  )\n};\n","module.exports = __webpack_public_path__ + \"static/media/skater_solo.15ed7214.jpg\";","module.exports = __webpack_public_path__ + \"static/media/main.5198f0b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/autumn.7fd69f42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/huiying.ecb3efa8.JPG\";","module.exports = __webpack_public_path__ + \"static/media/pinkmountain.4fc7b0e9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bluesea.ba86a8f8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flowers.780030e3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hill.58d9926a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trailer.decf04ae.jpg\";","module.exports = __webpack_public_path__ + \"static/media/bluemountains.792b1428.jpg\";","module.exports = __webpack_public_path__ + \"static/media/reflect.05a08e81.jpg\";","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const TimelineText = styled.span`\n  place-content: center;\n  white-space: nowrap;\n  margin-left: 40px;\n`;\n\nexport const TimelineDot = styled.span`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-top: 40px;\n  margin-bottom: 20px;\n  margin-left: -11px;\n  height: 25px;\n  width: 25px;\n  border-radius: 50%;\n  position: relative;\n  z-index: 999;\n\n  background-color: ${(props) => (props.active ? theme.colours.maroon : theme.colours.grey)};\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n\nexport const TimelineVerticalLine = styled.div`\n  width: 3px;\n  margin-left: 90px;\n  background-color: ${theme.colours.grey};\n`;\n\nexport const TimelineWrapper = styled.div`\n  display: flex;\n  padding: 10px 0 20px;\n  justify-content: space-between;\n`;\n\nexport const ArrowUp = styled.div`\n  position: absolute;\n  margin-left: 76px;\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n\nexport const ArrowDown = styled.div`\n  position: absolute;\n  margin-left: 76px;\n  margin-top: -30px;\n\n  :hover {\n    color: black;\n    cursor: pointer;\n    transform: scale(1.25);\n    transition: transform 0.4s;\n  }\n`;\n\n","import React, { useState } from 'react';\nimport { FaAngleDoubleUp, FaAngleDoubleDown } from 'react-icons/fa';\nimport {\n  TimelineWrapper,\n  TimelineVerticalLine,\n  TimelineDot,\n  TimelineText,\n  ArrowUp, ArrowDown\n} from './Timeline.styles';\nimport theme from '../../config/theme';\n\n// allPosts: {title, data, date}\nexport const Timeline = ({ allPosts, active, onClick } = {}) => {\n  // Note that we will not display all latest posts at once.\n  // At any point, there will only be 5 items showing in the timeline\n  // Start and End are the Indexes of the latest posts that we will show\n  const [start, setStart] = useState(0);\n  const [end, setEnd] = useState(5);\n\n  const displayPosts = allPosts.slice(start, end);\n\n  return (\n    <div>\n      {start > 0\n        ? (\n          <ArrowUp onClick={() => {\n            setStart(start - 1);\n            setEnd(end - 1);\n          }}\n          >\n            <FaAngleDoubleUp color={theme.colours.maroon} size={30} />\n          </ArrowUp>\n        )\n        : ''}\n       \n      <TimelineVerticalLine>\n        {displayPosts.map((item) => (\n          <TimelineWrapper key={item.title} onClick={() => onClick(item)}>\n            <TimelineDot\n              onClick={() => onClick(item)}\n              id={item}\n              active={active && active.title === item.title}\n            >\n              <TimelineText>{item.date}</TimelineText>\n            </TimelineDot>\n          </TimelineWrapper>\n        ))}\n      </TimelineVerticalLine>\n      \n      {end < allPosts.length\n        ? (\n          <ArrowDown onClick={() => {\n            setStart(start + 1);\n            setEnd(end + 1);\n          }}\n          >\n            <FaAngleDoubleDown color={theme.colours.maroon} size={30} />\n          </ArrowDown>\n        )\n        : ''}\n    </div>\n    \n  );\n};\n","import styled from 'styled-components';\nimport skater from '../../images/skater_solo.jpg';\n\nexport const style = {\n  main: {\n    height: '100vh',\n    backgroundColor: 'white',\n    paddingTop: '200px',\n  }\n};\n\nexport const ExperiencePageContainer = styled.div`\n  display: flex;\n  justify-content: flex-start;\n  background-color: white;\n  background-image: url('${skater}');\n  background-repeat: no-repeat;\n  background-position: bottom right;\n  background-size: 200px;\n  margin-right: 50px;\n`;\n\nexport const TimelineContainer = styled.div`\n  flex: 1;\n`;\n\nexport const EventDisplayContainer = styled.div`\n  flex: 3;\n  padding-right: 100px;\n`;\n","import styled from 'styled-components';\n\nexport const SimpleContainer = styled.div`\n  text-align: left;\n  margin: auto;\n  padding-bottom: 100px;\n`;","import React from 'react';\nimport {SimpleContainer} from './TimelineEventDisplay.styles';\n\nexport const TimelineEventDisplay = ({ active } = {}) => {\n  return (\n    <SimpleContainer>\n    <h1>{active.title}</h1>\n    <h3>{active.date}</h3>\n    {active.data.map((entry) => {\n        return <li>{entry}</li>\n    })}\n    </SimpleContainer>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { Timeline } from '../../components/Timeline/Timeline';\nimport {ExperiencePageContainer, TimelineContainer, EventDisplayContainer, style} from './ExperiencePage.styles';\nimport { useErrorStatus } from '../../ErrorHandler';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\nimport experienceJson from '../../config/experience.json'\nimport { TimelineEventDisplay } from '../../components/TimelineEventDisplay/TimelineEventDisplay';\n\nconst ExperiencePage = () => {\n\n  const [allEvents, setAllEvents] = useState([]); \n  const [active, setActive] = useState();\n  const [loading, setLoading] = useState(true);\n  const { setErrorStatusCode } = useErrorStatus();\n\n  useEffect(() => {\n    async function fetchLatestPosts() {\n      try {\n        setLoading(true);\n        setAllEvents(experienceJson.experiences);\n        setActive(experienceJson.experiences[0])\n        setLoading(false)\n      } catch (e) {\n        // Show error message\n        setErrorStatusCode(400);\n      }\n    }\n    fetchLatestPosts();\n  }, [setErrorStatusCode]);\n\n  const handleTimelineChange = (activeItem) => {\n    setActive(activeItem);\n  };\n\n  return (\n    <PortalLayout>\n      {!loading && allEvents.length > 0 ? (\n        <ExperiencePageContainer style={style.main}>\n          <TimelineContainer>\n            <Timeline\n              allPosts={allEvents}\n              active={active}\n              onClick={handleTimelineChange}\n            />\n          </TimelineContainer>\n          <EventDisplayContainer>\n            <TimelineEventDisplay active={active} />\n          </EventDisplayContainer>\n        </ExperiencePageContainer>\n      ) : loading ? (\n        <LoadSpinner />\n      ) : (\n        <NoPostHeader />\n      )}\n    </PortalLayout>\n  );\n};\n\nexport default ExperiencePage;\n","import React from 'react';\nimport { Card } from 'semantic-ui-react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport const QuoteCard = ({ post } = {}) => {\n\n  function getColor() {\n    return \"hsla(\" + ~~(360 * Math.random()) + \",\" +\n      \"70%,\" +\n      \"80%,1)\"\n  }\n\n  return (\n    <Card raised={true} style={{ 'background-color': getColor() }} >\n      <Card.Content>\n        <Card.Header>{ReactHtmlParser(post.title)}</Card.Header>\n        <Card.Meta>{post.date}</Card.Meta>\n        <Card.Description>\n          <div>{ReactHtmlParser(post.text || \"\")}</div>\n        </Card.Description>\n      </Card.Content>\n    </Card>\n\n  );\n};\n","import React from 'react';\nimport { Placeholder, Card } from 'semantic-ui-react';\n\nexport const EmptyQuoteCard = () => {\n  return (\n    <Card raised={true}>\n      <Card.Content>\n        <Placeholder>\n          <Placeholder.Line length=\"full\" />\n          <Placeholder.Line length=\"very long\" />\n          <Placeholder.Line length=\"long\" />\n          <Placeholder.Line length=\"medium\" />\n        </Placeholder>\n      </Card.Content>\n    </Card>\n  );\n};\n","import styled from 'styled-components';\n\nconst style = {\n  card: {\n    paddingLeft: '100px',\n    paddingRight: '100px',\n    paddingBottom: '50px'\n  },\n\n  image: {\n    paddingLeft: '100px',\n    paddingRight: '100px',\n    paddingBottom: '50px'\n  },\n\n  text: {\n    textAlign: 'center'\n  },\n};\n\nexport const Header = styled.h1`\n  text-align: center;\n  background-color: rgba(255,255,255,0.5);\n`\n\nexport const PostsCard = styled.div`\n  margin: auto;\n  margin-top: 100px;\n  text-align: left;\n  padding: 80px;\n`\n\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: ${(props) => 'url(' + props.image + ')'};\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport default style;\n\n","import React, { useEffect, useState } from 'react';\nimport { Card } from 'semantic-ui-react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { QuoteCard } from '../../components/QuoteCard/QuoteCard';\nimport { EmptyQuoteCard } from '../../components/EmptyQuoteCard/EmptyQuoteCard';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport style, { Background, PostsCard, Header } from './QuotesPage.styles.jsx';\nimport FirebaseWrapper from '../../api/connect-firebase';\nimport quoteImage from '../../images/pinkmountain.jpg';\n\nconst pathName = '/quotes-posts'\nconst db = FirebaseWrapper.ref(pathName)\n\nconst Quotes = () => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function fetchQuotesPosts() {\n      setLoading(true);\n      var response = await db.getAllPosts().then((posts) => {\n        if (posts) {\n          // contains {title, text, date, topImage}\n          return posts\n        }\n      });\n      setData(response);\n      setLoading(false);\n    }\n    fetchQuotesPosts();\n  }, []);\n\n  return (\n    <PortalLayout >\n      <div className=\"image\">\n        <Background image={quoteImage}>\n          <PostsCard>\n            {loading && data.length === 0 ? (\n              <div>\n                <div className=\"row\" style={style.card}>\n                  <Card.Group centered >\n                    {[...Array(4)].map(() => (\n                      <EmptyQuoteCard />\n                    ))}\n                  </Card.Group>\n                </div>\n              </div>\n            ) : (!loading && data.length === 0) ? (\n              <div>\n                <Header>My Favourite Quotes</Header>\n                <NoPostHeader style={style.text} />\n              </div>\n            ) : (\n              <div>\n                <Header>My Favourite Quotes</Header>\n                <div className=\"row\" style={style.card}>\n                  <Card.Group centered >\n                    {data.map((result, index) => (\n                      <QuoteCard post={result} />\n                    ))}\n                  </Card.Group>\n                </div>\n              </div>\n            )}\n          </PostsCard>\n        </Background>\n      </div>\n    </PortalLayout>\n  );\n};\n\nexport default Quotes;\n","import autumn from '../../images/autumn.jpg';\nimport styled from \"styled-components\";\nimport theme from '../../config/theme';\n\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: url('${autumn}');;\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport const AboutCard = styled.div`\n  background-color: rgba(255,255,255,0.5);\n  font-size: 20px;\n  width: calc(100% - 200px);\n  margin: 100px;\n  color: ${theme.colours.black};\n  text-align: left;\n  padding: 80px;\n  min-width: 750px;\n`","import ReactGA from \"react-ga\";\n\nconst useAnalyticsEventTracker = (category=\"Blog category\") => {\n  const eventTracker = (action = \"test action\", label = \"test label\") => {\n    ReactGA.event({category, action, label});\n  }\n  return eventTracker;\n}\nexport default useAnalyticsEventTracker;","import React, { useEffect } from \"react\";\nimport { Background, AboutCard } from \"./AboutPage.styles\";\nimport { Button, Icon, Image, Grid, Divider, Header } from \"semantic-ui-react\"\nimport PortalLayout from '../../layouts/PortalLayout';\nimport imagegirl from '../../images/huiying.JPG';\nimport { FaGlobeAsia } from 'react-icons/fa';\nimport { DisqusComments } from '../../components/DiscuqComments/DiscuqComments';\nimport useAnalyticsEventTracker from '../../api/UseAnalyticsEventTracker';\n\nconst AboutPage = () => {\n \n  const gaEventTracker =  useAnalyticsEventTracker(\"About Page\");\n\n  useEffect(() => {\n    gaEventTracker(\"Load Page\");\n  });\n  \n  return (\n    <PortalLayout>\n      <div className=\"image\">\n        <Background>\n          <br />\n          <br />\n          <AboutCard>\n            <Grid >\n              <Grid.Column width={4}>\n                <Image src={imagegirl} size='small'/>\n                {/* <h2><FaGlobeAsia color=\"maroon\" />{\" Singapore\"}</h2> */}\n                <br></br>\n                <Button color='linkedin' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://www.linkedin.com/in/hui-ying-ooi';\n                }}><Icon name='linkedin' />My LinkedIn</Button>\n                <br></br>\n                <br></br>\n                <Button color='red' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://drive.google.com/file/d/1O88yGgq-cGZTmcJnrpbXDeQhN5FMsEpx/view?usp=sharing';\n                }}><Icon name='book' />Resume Pdf</Button>\n                <br></br>\n                <br></br>\n                <Button color='black' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://github.com/ooihuiying';\n                }}><Icon name='github' />My GitHub</Button>\n                <br></br>\n                <br></br>\n                <Button color='purple' onClick={(e) => {\n                  e.preventDefault();\n                  window.location.href = 'https://liverungrow11.wordpress.com/';\n                }}><Icon name='wordpress' />Running Blog</Button>\n              </Grid.Column>\n              <Grid.Column width={12}>\n                <h1>About Me</h1>\n                <br />\n                <p> Hello 你好, I am Hui Ying 慧颖.</p>\n                <p> Welcome to my website! I created this website using React and JavaScript. This app is integrated with Google Firebase database and Cloudinary for storage.</p>\n                <p>\n                 I'm a software engineer. In my free time, I like to read, run, play sports, watch figure skating videos, listen to music of varying genres and languages, create artworks, take photographs and travel!\n                </p>\n                <p>I really hope you will enjoy browsing my personal website. Feel free to leave a reaction or comment below!</p>\n                <p>Have a nice day!</p>\n              </Grid.Column>\n            </Grid>\n            <div style={{ 'padding': \"100px\" }}>\n              <DisqusComments post={{\n                \"id\": \"123\",\n                \"title\": \"About\"\n              }} url={\"https://ooihuiying.github.io/personal_website/#\"} />\n          </div>\n          </AboutCard>\n        </Background>\n      </div>\n    </PortalLayout >\n  );\n};\n\nexport default AboutPage;\n","import styled from 'styled-components';\nimport bluesea from '../../images/bluesea.jpg';\n\nexport const Container = styled.div`\n  background-color: rgba(255,255,255,0.5);\n  margin-top: 80px;\n  text-align: left;\n  padding: 80px;\n  padding-bottom: 100px;\n`\n\nexport const ImageContainer = styled.div`\n  margin: auto;\n  padding: 50px;\n`;\n\nexport const Background = styled.div`\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: url('${bluesea}');;\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n","import React, { useEffect, useState } from 'react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { Container, Background, ImageContainer } from './FullArticlePage.styles';\nimport { useLocation } from 'react-router-dom'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Divider } from 'semantic-ui-react';\nimport LoadSpinner from '../../components/LoadSpinner/LoadSpinner';\nimport FirebaseWrapper from '../../api/connect-firebase';\nimport { DisqusComments } from '../../components/DiscuqComments/DiscuqComments';\n/*\n * Wanted to display Disqus comments section for each article page.\n * However, somehow all the articles ended up displaying the same comments\n * even though I passed in a different Disqus config .....\n * Hence, I just removed it..and only display the Disqus comments section in the \n * about page.\n */\nconst FullArticlePage = () => {\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    async function fetchPost() {\n      if (location.state !== undefined) {\n        // (1) Derive data from the query input\n        const data = location.state.post;\n        setData(data);\n        setLoading(false);\n      } else {\n        // (2) Derive data from the Database based on query url\n        setLoading(true);\n        const query_str = location.pathname.substring(1).split(\"/\") // '/full_article' + pathname + '/' + id\n        const pathname = query_str[1]\n        const id = query_str[2]\n        const db = FirebaseWrapper.ref(pathname + \"/\" + id)\n        var data = await db.getSinglePost(id).then((post) => {\n          if (post) {\n            // contains {title, text, date, topImage, tag, id}\n            return post\n          }\n        });\n        setData(data);\n        setLoading(false);\n      }\n    }\n    fetchPost();\n  }, []);\n\n  return (\n    <PortalLayout>\n      <Background >\n        {!loading ?\n          <div>\n            <Container>\n              {data.tag !== undefined ? <a className=\"ui red tag label\">{data.tag}</a> : <div />}\n              <h1 style={{ 'textAlign': 'center' }} as='h2'>{ReactHtmlParser(data.title) || \"\"}</h1>\n              {data.topImage ? (\n                <ImageContainer>\n                  <img\n                    src={data.topImage}\n                    alt=\"Image\"\n                    className=\"ui centered massive image\"\n                  />\n                </ImageContainer>\n              ) : (<div></div>)}\n              <Divider horizontal>{data.date || \"\"}</Divider>\n              {ReactHtmlParser(data.text || \"\")}\n              {/* <div style={{ 'padding': \"100px\" }}>\n                {data.tag !== \"quotes-posts\" ?\n                  <DisqusComments post={data} url={\"https://ooihuiying.github.io/personal_website/#\" + location.pathname} />\n                  : <div></div>\n                }\n              </div> */}\n            </Container>\n          </div>\n          : <LoadSpinner />}\n      </Background>\n    </PortalLayout >\n  );\n};\n\nexport default FullArticlePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport ExperiencePage from './pages/ExperiencePage/ExperiencePage';\nimport AboutPage from './pages/AboutPage/AboutPage';\nimport QuotesPage from './pages/QuotesPage/QuotesPage';\nimport Error404 from './pages/ErrorPage/Error404';\nimport { ErrorHandler } from './ErrorHandler';\nimport DetailsPage from './pages/DetailsPage/DetailsPage';\nimport FullArticlePage from './pages/FullArticlePage/FullArticlePage';\nimport book_reviews_img from '../src/images/flowers.jpg';\nimport chinese_img from '../src/images/hill.jpg';\nimport globe_img from '../src/images/trailer.jpg';\nimport compsci_img from '../src/images/bluemountains.jpg';\nimport reflect_img from '../src/images/reflect.jpg';\nimport FirebaseWrapper from '../src/api/connect-firebase';\nimport ReactGA from 'react-ga';\n\nrequire(\"dotenv\").config({ path: __dirname + \"/.env\" });\nconst cs_db = FirebaseWrapper.ref('/cs-posts')\nconst bk_db = FirebaseWrapper.ref('/book-reviews-posts')\nconst chi_db = FirebaseWrapper.ref('/chinese-culture-posts')\nconst gb_db = FirebaseWrapper.ref('/globe-trotting-posts')\nconst rf_db = FirebaseWrapper.ref('/reflection-posts')\n\nconst TRACKING_ID = process.env.FIREBASE_MEASUREMENT_ID;\nReactGA.initialize(TRACKING_ID);\n\n// Important to only use Hashrouter. Cannot use Browserrouter for github page.\nReactDOM.render(\n  <HashRouter >\n    <ErrorHandler>\n      <Switch>\n        <Route exact path=\"/\" ><AboutPage /></Route>\n        <Route exact path=\"/experience\"><ExperiencePage/></Route>\n        <Route exact path=\"/tech-world\"><DetailsPage pathname='/cs-posts' image={compsci_img} title='Tech World' db={cs_db} /></Route>\n        <Route exact path=\"/books\"><DetailsPage pathname='/book-reviews-posts' image={book_reviews_img} title='Books' db={bk_db} /></Route>\n        <Route exact path=\"/chinese-culture\"><DetailsPage pathname='/chinese-culture-posts' image={chinese_img} title='Chinese Culture' db={chi_db} /></Route>\n        <Route exact path=\"/globe_trotting\"><DetailsPage pathname='/globe-trotting-posts' image={globe_img} title='Globe Trotting' db={gb_db} /></Route>\n        <Route exact path=\"/quotes\"><QuotesPage /></Route>\n        <Route exact path=\"/reflections\"><DetailsPage pathname='/reflection-posts' image={reflect_img} title='Reflections' db={rf_db} /></Route>\n        <Route path=\"/full_article\"><FullArticlePage /></Route>\n        <Route path=\"*\" component={Error404} />\n      </Switch>\n    </ErrorHandler>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n/*\nQuotes\nGlobe Trotting\nReflections\nChinese Culture\nBook Reviews\nTech World\n*/","export default {\n  colours: {\n    white: '#ffffff',\n    black: '#000000',\n    maroon: '#960F4A',\n    grey: '#C4C4C4',\n    lightGrey: '#f4f5f6'\n  },\n  breakpoint: {\n    widescreen: '1408px',\n    desktop: '1400px',\n    tablet: '1210px',\n    mobile: '1000px'\n  }\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport theme from '../config/theme';\n\n\n\nexport const PortalLayoutStyled = styled('div')`\n  height: 100%;\n  width: 100%;\n\n  .layout--main {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 100%;\n\n    .layout--navbar {\n      padding-top: 50px;\n      padding-bottom: 50px;\n      padding-right: 50px;\n      padding-left: 50px;\n      width: 100%;\n      height: 10%;\n      align-items: center;\n      position: fixed;\n      z-index: 9999;\n      background-color: ${theme.colours.white};\n      display: flex;\n      justify-content: space-between;\n\n      .navbar--item {\n        display: inline-flex;\n        justify-content: space-between;\n        overflow-x: auto;\n        overflow-y: hidden;\n      }\n\n      .navbar--title {\n        display: inline-flex;\n        justify-content: space-between;\n        flex-direction: row;\n        align-items: center;\n        height: 30px;\n      }\n    }\n  }\n`;\n\nexport const NavItem = styled(Link)`\n  font-size: 18px;\n  font-weight: bold;\n  color: ${theme.colours.maroon};\n  padding: 0px 0px 0px 40px;\n\n  :hover {\n    color: ${theme.colours.maroon};\n    opacity: 0.8;\n  }\n`;\n\nexport const NavTitle = styled(Link)`\n  font-size: 40px;\n  font-weight: bold;\n  color: ${theme.colours.maroon};\n`;\n","import React from 'react';\n\nimport { PortalLayoutStyled, NavTitle, NavItem } from './PortalLayout.styles';\n\nconst PortalLayout = ({ children }) => {\n  return (\n    <PortalLayoutStyled>\n      <div className=\"layout--main\">\n        <div className=\"layout--navbar\">\n          <div className=\"navbar--title\" >\n            <NavTitle to=\"/\">Hui Ying</NavTitle>\n          </div>\n          <div className=\"navbar--item\">\n            <NavItem to=\"/experience\">\n              My Experience\n           </NavItem>\n            <NavItem to=\"/tech-world\">\n              Tech World\n             </NavItem>\n            <NavItem to=\"/books\">\n              Books\n             </NavItem>\n            {/* <NavItem to=\"/chinese-culture\">\n              Chinese Culture\n             </NavItem> */} \n            {/* <NavItem to=\"/globe_trotting\">\n              Globe Trotting\n            </NavItem> */}\n            <NavItem to=\"/quotes\">\n              Quotes\n             </NavItem>\n            {/* <NavItem to=\"/reflections\">\n              Reflections\n             </NavItem> */}\n          </div>\n        </div>\n      </div>\n      {children}\n    </PortalLayoutStyled>\n\n  );\n};\nexport default PortalLayout;","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: process.env.FIREBASE_API_KEY,\n    authDomain: \"ooijournal.firebaseapp.com\",\n    databaseURL: \"https://ooijournal.firebaseio.com\",\n    projectId: \"ooijournal\",\n    storageBucket: \"ooijournal.appspot.com\",\n    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.FIREBASE_API_ID,\n    measurementId: process.env.FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n/**\n * Wrapper class to interface with firebase\n * Orderby needs to be there in order for StartAfter, StartAt, endAt etc to work. IT defined\n * the field of start/end value\n * \n * The retrieval of data is done in a reverse manner. We want to retrieve the post with the\n * latest date - most recent - instead of post with smallest date.\n */\nclass FirebaseWrapper {\n\n    constructor(path) {\n        this._ref = firebase.database().ref(path);\n        this.lastDocument = null;\n        this.firstDocument = null;\n        this.LIMIT = 10;\n    }\n\n    static ref(path) {\n        return new FirebaseWrapper(path);\n    }\n\n    formatPost(post) {\n        var newTitle = \"\";\n        post.title.split(\"\\n\").map(function (item) {\n            newTitle += \"<span>\" + item + \"<br /></span>\";\n        })\n        post['title'] = newTitle;\n        return post;\n    }\n\n    getSinglePost(id) {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .once(\"value\")\n            .then(post => {\n                var newPost = post.val();\n                newPost = this.formatPost(newPost);\n                newPost[\"id\"] = id;\n                return newPost;\n            })\n            .catch(console.error);\n    }\n\n    getAllPosts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    total = [newPost].concat(total);\n                })\n                return total;\n            })\n            .catch(console.error);\n    }\n\n    get10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToLast(this.LIMIT)\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n\n    getPrev10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToFirst(this.LIMIT)\n            .startAfter(this.lastDocument) // exclusive\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n\n    getNext10Posts() {\n        return this._ref\n            .orderByChild(\"date\") // date in ascending order\n            .limitToLast(this.LIMIT + 1)\n            .endBefore(this.firstDocument) // exclusive\n            .once(\"value\")\n            .then(snapshot => {\n                let total = [];\n                var temp = [];\n                snapshot.forEach(post => {\n                    //add new element to the front of the array\n                    var newPost = post.val();\n                    newPost['id'] = post.key;\n                    newPost = this.formatPost(newPost);\n                    temp = temp.concat(newPost.date);\n                    total = [newPost].concat(total);\n                })\n                if (temp.length > 0) {\n                    this.lastDocument = temp[temp.length - 1];\n                    this.firstDocument = temp[0];\n                }\n                return total;\n            }).catch(console.error);\n    }\n}\n\nexport default FirebaseWrapper;\n","import React from 'react';\n\nexport const NoPostHeader = ({ style }) => {\n  return (\n    <h1 style={style}>No Post Yet!</h1>\n  );\n};\n","export const SegmentStyle = {\n  backgroundColor: 'rgba(255, 255, 255, 0.7)',\n  overflow: 'auto',\n};","import styled from 'styled-components';\nimport theme from '../../config/theme';\n\nexport const Explore = styled.span`\n  font-size: 50px;\n  font-weight: bold;\n  display: inline-flex;\n  align-items: center;\n  color: ${theme.colours.maroon};\n  :hover {\n    background-color: rgba(255,255,255,0.5);\n    cursor: pointer;\n  }\n`;\nexport const ButtonText = styled.span`\n  font-size: 1rem;\n  margin-right: 10px;\n`;\n","import React from 'react';\nimport { FiArrowRightCircle, FiArrowLeftCircle } from 'react-icons/fi';\nimport { Explore, ButtonText } from './ExploreButton.styles';\n\nexport const ExploreButton = ({ handleExploreButtonClick, text, pointRight } = {}) => (\n  <div>\n    <Explore\n      onClick={handleExploreButtonClick}\n    >\n      <ButtonText>{text}</ButtonText>\n      {pointRight ? <FiArrowRightCircle /> : <FiArrowLeftCircle />}\n    </Explore>\n  </div>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Segment } from 'semantic-ui-react';\nimport { SegmentStyle } from './DetailCard.styles';\nimport ReactHtmlParser from 'react-html-parser';\nimport { ExploreButton } from '../ExploreButton/ExploreButton'\n\nexport const DetailCard = ({\n  result, pathname\n} = {}) => {\n  const history = useHistory();\n\n  const handleClick = async () => {\n    const query = {\n      title: result.title,\n      text: result.text,\n      date: result.date,\n      topImage: result.topImage,\n      tag: result.tag,\n      id: result.id\n    };\n    history.push({\n      pathname: '/full_article' + pathname + '/' + result.id,\n      state: { post: query }\n    });\n  }\n\n  return (\n    <Segment style={SegmentStyle}>\n      <div className=\"ui items\">\n        <div className=\"item\">\n          {result.topImage != null ? (\n            <div className=\"image\">\n              <img\n                src={result.topImage}\n                alt=\"Image\"\n                width=\"200\"\n                height=\"121\"\n              />\n            </div>\n          ) : (<div />)}\n          <div className=\"content\">\n            <div className=\"header\">{ReactHtmlParser(result.title)}</div>\n            <div className=\"meta\">{result.date}</div>\n            <div>{result.text.length > 500 ? ReactHtmlParser(result.text.slice(0, 500) + \" ......\") : ReactHtmlParser(result.text + \" ......\") || \"\"}</div>\n            <br></br>\n            <ExploreButton handleExploreButtonClick={handleClick} text={\"Read More\"} pointRight={true} />\n          </div>\n        </div>\n      </div>\n    </Segment>\n\n  );\n};\n","export const SegmentStyle = {\n  backgroundColor: 'rgba(255, 255, 255, 0.7)'\n};\n","import React from 'react';\nimport { Segment, Placeholder } from 'semantic-ui-react';\nimport { SegmentStyle } from './EmptyDetailCard.styles';\n\nexport const EmptyDetailCard = () => {\n  return (\n    <Segment style={SegmentStyle}>\n      <div className=\"ui items\">\n        <div className=\"item\">\n          <div className=\"image\">\n            <Placeholder>\n              <Placeholder.Image />\n            </Placeholder>\n          </div>\n          <div className=\"content\">\n            <Placeholder>\n              <Placeholder.Line length=\"full\" />\n              <Placeholder.Line length=\"very long\" />\n              <Placeholder.Line length=\"long\" />\n              <Placeholder.Line length=\"medium\" />\n            </Placeholder>\n          </div>\n        </div>\n      </div>\n    </Segment>\n  );\n};\n","import styled from 'styled-components';\n\nconst style = {\n  text: {\n    textAlign: 'center',\n  }\n};\n\nexport const Header = styled.h1`\n  text-align: center;\n  background-color: rgba(255,255,255,0.5);\n`\nexport const Background = styled.div`\n  position: absolute;\n  min-width: 100%;\n  min-height: 100%;\n  top: 0;\n  left: 0;\n  background-image: ${(props) => 'url(' + props.image + ')'};\n  background-size: cover;\n  background-attachment:fixed;\n  -webkit-background-size: cover;\n  -moz-background-size: cover;\n  -o-background-size: cover;\n  align-items: center;\n`\n\nexport const PostsCard = styled.div`\n  margin: 100px;\n  text-align: left;\n  padding: 80px;\n  margin-right: auto;\n  margin-left: auto;\n }\n`\n\nexport const ButtonWrapper = styled.div`\n  text-align: end;\n`;\n\nexport default style;\n","import { Grid } from 'semantic-ui-react';\nimport PortalLayout from '../../layouts/PortalLayout';\nimport { DetailCard } from '../../components/DetailCard/DetailCard';\nimport { EmptyDetailCard } from '../../components/EmptyDetailCard/EmptyDetailCard';\nimport { NoPostHeader } from '../../components/NoPostHeader/NoPostHeader';\nimport style, { ButtonWrapper, Background, PostsCard, Header } from './DetailsPage.styles';\nimport { ExploreButton } from '../../components/ExploreButton/ExploreButton';\nimport React, { useEffect, useState } from 'react';\n\nconst DetailsPage = ({ pathname, image, title, db }) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  async function fetchPosts() {\n    setLoading(true)\n    var response = await db.get10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n\n    if (response.length > 0) {\n      setData(response)\n    } else {\n      setData([])\n    }\n\n    setLoading(false)\n  }\n\n  async function fetchNextPosts() {\n    setLoading(true)\n    var response = await db.getNext10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n    if (response.length > 0) {\n      setData(response)\n    }\n    setLoading(false)\n  }\n\n  async function fetchPrevPosts() {\n    setLoading(true)\n    var response = await db.getPrev10Posts().then((posts) => {\n      if (posts) {\n        // contains {title, text, date, topImage (optional), tag, id}\n        return posts\n      }\n    });\n    if (response.length > 0) {\n      setData(response)\n    }\n    setLoading(false)\n  }\n\n  const handlePrevButtonClick = async () => {\n    fetchPrevPosts();\n  }\n  const handleNextButtonClick = async () => {\n    fetchNextPosts();\n  };\n\n  useEffect(() => {\n    // Trigger fetchPosts if the title changes\n    fetchPosts();\n  }, [title]);\n\n  return (\n    <PortalLayout>\n      <div className=\"image\">\n        <Background image={image}>\n          <br />\n          <br />\n          <PostsCard>\n            <div>\n              <Header>{title}</Header>\n              {loading ? (\n                <div>\n                  <div className=\"row\">\n                    <Grid centered stackable columns={1}>\n                      <Grid.Column width={10}>\n                        {[...Array(10)].map(() => (\n                          <EmptyDetailCard />\n                        ))}\n                      </Grid.Column>\n                    </Grid>\n                  </div>\n                </div>\n              ) : !loading && data.length > 0 ? (\n                <div>\n                  <div className=\"row\">\n                    <Grid centered stackable columns={1}>\n                      <Grid.Column>\n                        {data.map((result) => (\n                          <DetailCard result={result} pathname={pathname} />\n                        ))}\n                      </Grid.Column>\n                    </Grid>\n                  </div>\n                </div>\n              ) : (\n                <NoPostHeader style={style.text} />\n              )}\n              {data.length > 0 ? (\n                <Grid centered stackable columns={2}>\n                  <Grid.Row >\n                    <ButtonWrapper>\n                      <ExploreButton handleExploreButtonClick={handlePrevButtonClick} text={\"\"} pointRight={false} />\n                    </ButtonWrapper>\n                    <ButtonWrapper>\n                      <ExploreButton handleExploreButtonClick={handleNextButtonClick} text={\"\"} pointRight={true} />\n                    </ButtonWrapper>\n                  </Grid.Row>\n                </Grid>\n              ) : (<div />)}\n            </div>\n          </PostsCard>\n        </Background>\n      </div>\n    </PortalLayout >\n  );\n};\n\nexport default DetailsPage;\n","import React from 'react';\n\nimport main from '../../images/main.svg';\n\nconst Error404 = () => (\n  <img className=\"ui  centered massive image\" src={main} alt=\"Page Not Found\" />\n);\n\nexport default Error404;\n","import React from 'react';\nimport PortalLayout from '../../layouts/PortalLayout';\n\nconst Error400 = () => (\n  <PortalLayout>\n    <h1>Error retrieving information</h1>\n  </PortalLayout>\n);\n\nexport default Error400;\n","import React, {\n  useContext, useEffect, useState, useMemo, createContext\n} from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Error404 from './pages/ErrorPage/Error404';\nimport Error400 from './pages/ErrorPage/Error400';\n\n// A context will be the way that we allow components lower down\n// the tree to trigger the display of an error page\nconst ErrorStatusContext = createContext();\n\n// The top level component that will wrap our app's core features\nexport const ErrorHandler = ({ children }) => {\n  const history = useHistory();\n  const [errorStatusCode, setErrorStatusCode] = useState();\n\n  // Make sure to \"remove\" this status code whenever the user\n  // navigates to a new URL. If we didn't do that, then the user\n  // would be \"trapped\" into error pages forever\n  useEffect(() => {\n    // Listen for changes to the current location.\n    const unlisten = history.listen(() => setErrorStatusCode(undefined));\n    // cleanup the listener on unmount\n    return unlisten;\n  }, [history]);\n\n  // This is what the component will render. If it has an\n  // errorStatusCode that matches an API error, it will only render\n  // an error page. If there is no error status, then it will render\n  // the children as normal\n  const renderContent = () => {\n    if (errorStatusCode === 404) {\n      return <Error404 />;\n    }\n    if (errorStatusCode === 400) {\n      // Handle failed API calls\n      return <Error400 />;\n    }\n\n    // ... more HTTP codes handled here\n\n    return children;\n  };\n\n  // We wrap it in a useMemo for performance reasons. More here:\n  // https://kentcdodds.com/blog/how-to-optimize-your-context-value/\n  const contextPayload = useMemo(\n    () => ({ setErrorStatusCode }),\n    [setErrorStatusCode]\n  );\n\n  // We expose the context's value down to our components, while\n  // also making sure to render the proper content to the screen\n  return (\n    <ErrorStatusContext.Provider value={contextPayload}>\n      {renderContent()}\n    </ErrorStatusContext.Provider>\n  );\n};\n\n// A custom hook to quickly read the context's value. It's\n// only here to allow quick imports\nexport const useErrorStatus = () => useContext(ErrorStatusContext);\n","import styled from 'styled-components';\n\n// Center in screen\nexport const Wrapper = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  transform: -webkit-translate(-50%, -50%);\n  transform: -moz-translate(-50%, -50%);\n  transform: -ms-translate(-50%, -50%);\n  z-index: 9999;\n`;\n","import React from 'react';\nimport ReactLoading from 'react-loading';\nimport theme from '../../config/theme';\nimport { Wrapper } from './LoadingSpinner.styles';\n\nconst LoadSpinner = () => (\n  <Wrapper>\n    <ReactLoading type=\"spin\" color={theme.colours.maroon} />\n  </Wrapper>\n);\n\nexport default LoadSpinner;\n"],"sourceRoot":""}